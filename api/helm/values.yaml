# Default values for api.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

settings:
  registryBase: docker.io/conduction
  projectName: contactcatalogus
  name: contactcatalogus
  version: V1.0
  majorVersion: v1
  description: 'Het Contacten Component bevat lijsten van contactpersonen, hiermee heeft het vanuit bron perspectief doorgaans een aanvullende of vervangende taak ten opzichte van het BRP. Met andere woorden in het Contacten Component vinden we personen die we niet uit het BRP halen. Dat kan zijn, omdat deze personen niet in het BRP staan, we nog niet weten wat het BSN van een persoon is of omdat we simpelweg geen rechten of toegang hebben tot het BRP vanuit het proces waar we mee bezig zijn. Daarnaast fungeert het Contacten Component als een Common Ground variant van de contactpersonenlijst, zoals we die kennen vanuit een e-mail applicatie of telefoon. Het is dus ook mogelijk om personen op te nemen in een contactenlijst. Hiermee worden contact en functionaliteiten voor gebruikers (in application form) gerealiseerd. Als laatste biedt het Contacten Component de mogelijkheid om gegevens van organisaties op te slaan. Het component ondersteunt bewust alleen de persoonsgegevens, maar kan in samenwerking met het CMR en ORC een Customer Relation Management systeem vormen, waarbij het ORC de mogelijkheid biedt om bijvoorbeeld leads in kaart te brengen.'
  repro: https://github.com/ConductionNL/contactcatalogus
  demo: contactcatalogus.zuid-drecht.nl
  domain: zuid-drecht.nl
  subdomain: contactcatalogus
  subpath: contactcatalogus
  subpathRouting: true
  env: dev
  web: false
  debug: 1
  cache: false
  type: component
  id: 
  internal: false
  replicaCount: 1
  corsAllowOrigin: ['*']
  trustedHosts: '^.+$'
  pullPolicy: Always
  # You will need these proxies on kubernetes
  trustedProxies:
    - 10.0.0.0/8
    - 172.16.0.0/12
    - 192.168.0.0/16
  # If you are running a single component on a kubernetes cluster you can just easily enable the load balancer, if not you need to set up a multi component load balancer
  loadbalancerEnabled: false
  # If you are running a single component on a kubernetes cluster you can just easily enable the load balancer, if not you need to set up a multi component load balancer
  notificationEnabled: false
  audittrailEnabled: false
  authorisationEnabled: false
  healthEnabled: false
  archiveEnabled: false

security:
  applicationKey: "45c1a4b6-59d3-4a6e-86bf-88a872f35845"


php:
  repository: docker.io/conduction/protocomponent-php
  tag: latest
  mercure:
    jwtSecret: ""
  env: prod
  secret: ""
  replicaCount: 2

redis:
  cluster:
    enabled: false
  redisPort: 6379
  usePassword: false
  enabled: false
commonground:
  eherkenning:
    location: https://zuid-drecht.nl/eherkenning
  digispoof:
    location: https://zuid-drecht.nl/digispoof

nginx:
  repository: docker.io/conduction/protocomponent-nginx
  tag: latest
  pullPolicy: Always
  replicaCount: 2

varnish:
  enabled: true
  #url: https://example.com
  repository: docker.io/conduction/protocomponent-varnish
  tag: latest
  pullPolicy: Always
  replicaCount: 1

postgresql:
  enabled: true
  imageTag: 10-alpine
  # If bringing your own PostgreSQL, the full uri to use
  #url: pgsql://api-platform:!ChangeMe!@example.com/api?serverVersion=10.1
  postgresqlUsername: "example"
  postgresqlPassword: "!ChangeMe!"
  postgresqlDatabase: "api"
  # Persistent Volume Storage configuration.
  # ref: https://kubernetes.io/docs/user-guide/persistent-volumes
  persistence:
    enabled: true
  pullPolicy: IfNotPresent
#  image:
#    repository: postgres
#    tag: alpine

mercure:
  enabled: true
  publishUrl: http://mercure/hub
  subscribeUrl: https://mercure.example.com/hub
  allowAnonymous: "1"
  corsAllowedOrigins: "^https?://.*?\\.example\\.com$"
  acmeHosts: "" # TODO: Fix the Mercure chart
  service:
    type: NodePort
    port: 80

ingress:
  annotations:
    # kubernetes.io/ingress.global-static-ip-name: chart-ip
    # kubernetes.io/ingress.class: gce
    # kubernetes.io/tls-acme: "true"
  tls:
    # Secrets must be manually created in the namespace, you can also use cert-manager.
    # - hosts:
      # - example.com
      # - mercure.example.com
  hosts:
    api:
      host: example.com
      serviceName: varnish
    mercure:
      host: mercure.example.com
      serviceName: mercure

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #  cpu: 100m
  #  memory: 128Mi
  # requests:
  #  cpu: 100m
  #  memory: 128Mi
