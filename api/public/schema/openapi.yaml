openapi: 3.0.3
info:
  title: ''
  description: |-
    API Details
    - Reference: contactcatalogus
    - Enviroment: dev
    - Version: V1.0
    - Repository: [online](https://github.com/ConductionNL/contactcatalogus) / [zip](https://github.com/ConductionNL/contactcatalogus/archive/master.zip)
    - Datamodel: [postman](schema/contactcatalogus.postman_collection.json) / [oas](schema/openapi.yaml) / [pdf](schema/datamodel.pdf) / [modelio (zip)](schema/Datamodel_Modelio.zip) 

    Het Contacten Component bevat lijsten van contactpersonen, hiermee heeft het vanuit bron perspectief doorgaans een aanvullende of vervangende taak ten opzichte van het BRP. Met andere woorden in het Contacten Component vinden we personen die we niet uit het BRP halen. Dat kan zijn, omdat deze personen niet in het BRP staan, we nog niet weten wat het BSN van een persoon is of omdat we simpelweg geen rechten of toegang hebben tot het BRP vanuit het proces waar we mee bezig zijn. Daarnaast fungeert het Contacten Component als een Common Ground variant van de contactpersonenlijst, zoals we die kennen vanuit een e-mail applicatie of telefoon. Het is dus ook mogelijk om personen op te nemen in een contactenlijst. Hiermee worden contact en functionaliteiten voor gebruikers (in application form) gerealiseerd. Als laatste biedt het Contacten Component de mogelijkheid om gegevens van organisaties op te slaan. Het component ondersteunt bewust alleen de persoonsgegevens, maar kan in samenwerking met het CMR en ORC een Customer Relation Management systeem vormen, waarbij het ORC de mogelijkheid biedt om bijvoorbeeld leads in kaart te brengen.
  version: V1.0
servers:
  -
    url: /
    description: ''
paths:
  /addresses:
    get:
      operationId: getAddressCollection
      tags:
        - Address
      responses:
        200:
          description: 'Address collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Address.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Address.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Address-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Address-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Address-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Address-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Address-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Address-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Address-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Address-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Address-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Address-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Address-read'
      summary: 'Retrieves the collection of Address resources.'
      description: 'Retrieves the collection of Address resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[id]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[name]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[bagnummeraanduiding]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[street]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[houseNumber]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[houseNumberSuffix]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[postalCode]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[region]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[locality]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[country]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[postOfficeBoxNumber]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[dateCreated]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[dateModified]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[strictly_before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[strictly_after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[strictly_before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[strictly_after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: id
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'id[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: name
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'name[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: bagnummeraanduiding
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'bagnummeraanduiding[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: street
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'street[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: houseNumber
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'houseNumber[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: houseNumberSuffix
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'houseNumberSuffix[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: postalCode
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'postalCode[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: region
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'region[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: locality
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'locality[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: country
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'country[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: postOfficeBoxNumber
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'postOfficeBoxNumber[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: dateCreated
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: dateModified
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: postAddressCollection
      tags:
        - Address
      responses:
        201:
          description: 'Address resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Address.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Address.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Address-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Address-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Address-read'
          links:
            GetAddressItem:
              operationId: getAddressItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /addresses/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a Address resource.'
      description: 'Creates a Address resource.'
      parameters: []
      requestBody:
        description: 'The new Address resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Address.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Address.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Address-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Address-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Address-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Address-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Address-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Address-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Address-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Address-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Address-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Address-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Address-write'
        required: true
      deprecated: false
    parameters: []
  '/addresses/{id}':
    get:
      operationId: getAddressItem
      tags:
        - Address
      responses:
        200:
          description: 'Address resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Address.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Address.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Address-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Address-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Address-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a Address resource.'
      description: 'Retrieves a Address resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: putAddressItem
      tags:
        - Address
      responses:
        200:
          description: 'Address resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Address.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Address.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Address-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Address-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Address-read'
          links:
            GetAddressItem:
              operationId: getAddressItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /addresses/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the Address resource.'
      description: 'Replaces the Address resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated Address resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Address.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Address.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Address-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Address-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Address-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Address-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Address-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Address-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Address-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Address-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Address-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Address-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Address-write'
        required: true
      deprecated: false
    delete:
      operationId: deleteAddressItem
      tags:
        - Address
      responses:
        204:
          description: 'Address resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the Address resource.'
      description: 'Removes the Address resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/addresses/{id}/audit_trail':
    get:
      operationId: get_audit_trailAddressItem
      tags:
        - Address
      responses:
        200:
          description: 'Address resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Address.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Address.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Address-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Address-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Address-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a Address resource.'
      description: 'Retrieves a Address resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/addresses/{id}/change_log':
    get:
      operationId: get_change_logsAddressItem
      tags:
        - Address
      responses:
        200:
          description: 'Address resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Address.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Address.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Address-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Address-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Address-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a Address resource.'
      description: 'Retrieves a Address resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  /audit_trails:
    get:
      operationId: getAuditTrailCollection
      tags:
        - AuditTrail
      responses:
        200:
          description: 'AuditTrail collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/AuditTrail.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/AuditTrail.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
      summary: 'Retrieves the collection of AuditTrail resources.'
      description: 'Retrieves the collection of AuditTrail resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[application]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[request]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[user]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[subject]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[resource]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[resourceType]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[endpoint]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[contentType]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[content]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[session]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[dateCreated]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[dateModified]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: request
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'request[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: user
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'user[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: subject
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'subject[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: resource
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'resource[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: resourceType
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: endpoint
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'endpoint[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: contentType
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'contentType[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: content
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'content[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: session
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'session[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: 'dateCreated[before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[strictly_before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[strictly_after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[strictly_before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[strictly_after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: postAuditTrailCollection
      tags:
        - AuditTrail
      responses:
        201:
          description: 'AuditTrail resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AuditTrail.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/AuditTrail.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/html:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
          links:
            GetAuditTrailItem:
              operationId: getAuditTrailItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /audit_trails/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a AuditTrail resource.'
      description: 'Creates a AuditTrail resource.'
      parameters: []
      requestBody:
        description: 'The new AuditTrail resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/AuditTrail.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/AuditTrail.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          text/html:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
        required: true
      deprecated: false
    parameters: []
  '/audit_trails/{id}':
    get:
      operationId: getAuditTrailItem
      tags:
        - AuditTrail
      responses:
        200:
          description: 'AuditTrail resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AuditTrail.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/AuditTrail.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/html:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a AuditTrail resource.'
      description: 'Retrieves a AuditTrail resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: putAuditTrailItem
      tags:
        - AuditTrail
      responses:
        200:
          description: 'AuditTrail resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AuditTrail.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/AuditTrail.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/html:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
          links:
            GetAuditTrailItem:
              operationId: getAuditTrailItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /audit_trails/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the AuditTrail resource.'
      description: 'Replaces the AuditTrail resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated AuditTrail resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/AuditTrail.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/AuditTrail.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          text/html:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
        required: true
      deprecated: false
    delete:
      operationId: deleteAuditTrailItem
      tags:
        - AuditTrail
      responses:
        204:
          description: 'AuditTrail resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the AuditTrail resource.'
      description: 'Removes the AuditTrail resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: patchAuditTrailItem
      tags:
        - AuditTrail
      responses:
        200:
          description: 'AuditTrail resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AuditTrail.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/AuditTrail.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/html:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
          links:
            GetAuditTrailItem:
              operationId: getAuditTrailItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /audit_trails/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Updates the AuditTrail resource.'
      description: 'Updates the AuditTrail resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated AuditTrail resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/AuditTrail.jsonld-write'
          application/json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          text/html:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
        required: true
      deprecated: false
    parameters: []
  /change_logs:
    get:
      operationId: getChangeLogCollection
      tags:
        - ChangeLog
      responses:
        200:
          description: 'ChangeLog collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/ChangeLog.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/ChangeLog.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
      summary: 'Retrieves the collection of ChangeLog resources.'
      description: 'Retrieves the collection of ChangeLog resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[action]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[objectId]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[objectClass]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[version]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[username]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[dateCreated]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[dateModified]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: action
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'action[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: objectId
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'objectId[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: objectClass
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'objectClass[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: version
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
          style: form
          explode: false
          allowReserved: false
        -
          name: 'version[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: integer
          style: form
          explode: true
          allowReserved: false
        -
          name: 'dateCreated[before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[strictly_before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[strictly_after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[strictly_before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[strictly_after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: postChangeLogCollection
      tags:
        - ChangeLog
      responses:
        201:
          description: 'ChangeLog resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ChangeLog.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/ChangeLog.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/html:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
          links:
            GetChangeLogItem:
              operationId: getChangeLogItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /change_logs/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a ChangeLog resource.'
      description: 'Creates a ChangeLog resource.'
      parameters: []
      requestBody:
        description: 'The new ChangeLog resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/ChangeLog.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/ChangeLog.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          text/html:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
        required: true
      deprecated: false
    parameters: []
  '/change_logs/{id}':
    get:
      operationId: getChangeLogItem
      tags:
        - ChangeLog
      responses:
        200:
          description: 'ChangeLog resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ChangeLog.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/ChangeLog.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/html:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a ChangeLog resource.'
      description: 'Retrieves a ChangeLog resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: putChangeLogItem
      tags:
        - ChangeLog
      responses:
        200:
          description: 'ChangeLog resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ChangeLog.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/ChangeLog.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/html:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
          links:
            GetChangeLogItem:
              operationId: getChangeLogItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /change_logs/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the ChangeLog resource.'
      description: 'Replaces the ChangeLog resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated ChangeLog resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/ChangeLog.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/ChangeLog.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          text/html:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
        required: true
      deprecated: false
    delete:
      operationId: deleteChangeLogItem
      tags:
        - ChangeLog
      responses:
        204:
          description: 'ChangeLog resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the ChangeLog resource.'
      description: 'Removes the ChangeLog resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: patchChangeLogItem
      tags:
        - ChangeLog
      responses:
        200:
          description: 'ChangeLog resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ChangeLog.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/ChangeLog.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/html:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
          links:
            GetChangeLogItem:
              operationId: getChangeLogItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /change_logs/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Updates the ChangeLog resource.'
      description: 'Updates the ChangeLog resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated ChangeLog resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/ChangeLog.jsonld-write'
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          text/html:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
        required: true
      deprecated: false
    parameters: []
  /contact_lists:
    get:
      operationId: getContactListCollection
      tags:
        - ContactList
      responses:
        200:
          description: 'ContactList collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/ContactList.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/ContactList.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ContactList-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ContactList-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ContactList-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ContactList-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ContactList-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ContactList-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ContactList-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ContactList-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ContactList-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ContactList-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ContactList-read'
      summary: 'Retrieves the collection of ContactList resources.'
      description: 'Retrieves the collection of ContactList resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[id]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[name]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[description]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[dateCreated]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[dateModified]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[strictly_before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[strictly_after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[strictly_before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[strictly_after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: id
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'id[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: name
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'name[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: description
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'description[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: dateCreated
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: dateModified
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: postContactListCollection
      tags:
        - ContactList
      responses:
        201:
          description: 'ContactList resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ContactList.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/ContactList.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ContactList-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/ContactList-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ContactList-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/ContactList-read'
            application/json:
              schema:
                $ref: '#/components/schemas/ContactList-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/ContactList-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/ContactList-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/ContactList-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ContactList-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/ContactList-read'
            text/html:
              schema:
                $ref: '#/components/schemas/ContactList-read'
          links:
            GetContactListItem:
              operationId: getContactListItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /contact_lists/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a ContactList resource.'
      description: 'Creates a ContactList resource.'
      parameters: []
      requestBody:
        description: 'The new ContactList resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/ContactList.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/ContactList.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ContactList-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/ContactList-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/ContactList-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/ContactList-write'
          application/json:
            schema:
              $ref: '#/components/schemas/ContactList-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/ContactList-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/ContactList-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/ContactList-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/ContactList-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/ContactList-write'
          text/html:
            schema:
              $ref: '#/components/schemas/ContactList-write'
        required: true
      deprecated: false
    parameters: []
  '/contact_lists/{id}':
    get:
      operationId: getContactListItem
      tags:
        - ContactList
      responses:
        200:
          description: 'ContactList resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ContactList.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/ContactList.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ContactList-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/ContactList-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ContactList-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/ContactList-read'
            application/json:
              schema:
                $ref: '#/components/schemas/ContactList-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/ContactList-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/ContactList-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/ContactList-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ContactList-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/ContactList-read'
            text/html:
              schema:
                $ref: '#/components/schemas/ContactList-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a ContactList resource.'
      description: 'Retrieves a ContactList resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: putContactListItem
      tags:
        - ContactList
      responses:
        200:
          description: 'ContactList resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ContactList.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/ContactList.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ContactList-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/ContactList-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ContactList-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/ContactList-read'
            application/json:
              schema:
                $ref: '#/components/schemas/ContactList-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/ContactList-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/ContactList-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/ContactList-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ContactList-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/ContactList-read'
            text/html:
              schema:
                $ref: '#/components/schemas/ContactList-read'
          links:
            GetContactListItem:
              operationId: getContactListItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /contact_lists/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the ContactList resource.'
      description: 'Replaces the ContactList resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated ContactList resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/ContactList.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/ContactList.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ContactList-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/ContactList-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/ContactList-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/ContactList-write'
          application/json:
            schema:
              $ref: '#/components/schemas/ContactList-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/ContactList-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/ContactList-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/ContactList-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/ContactList-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/ContactList-write'
          text/html:
            schema:
              $ref: '#/components/schemas/ContactList-write'
        required: true
      deprecated: false
    delete:
      operationId: deleteContactListItem
      tags:
        - ContactList
      responses:
        204:
          description: 'ContactList resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the ContactList resource.'
      description: 'Removes the ContactList resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/contact_lists/{id}/audit_trail':
    get:
      operationId: get_audit_trailContactListItem
      tags:
        - ContactList
      responses:
        200:
          description: 'ContactList resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ContactList.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/ContactList.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ContactList-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/ContactList-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ContactList-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/ContactList-read'
            application/json:
              schema:
                $ref: '#/components/schemas/ContactList-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/ContactList-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/ContactList-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/ContactList-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ContactList-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/ContactList-read'
            text/html:
              schema:
                $ref: '#/components/schemas/ContactList-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a ContactList resource.'
      description: 'Retrieves a ContactList resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/contact_lists/{id}/change_log':
    get:
      operationId: get_change_logsContactListItem
      tags:
        - ContactList
      responses:
        200:
          description: 'ContactList resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ContactList.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/ContactList.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ContactList-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/ContactList-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ContactList-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/ContactList-read'
            application/json:
              schema:
                $ref: '#/components/schemas/ContactList-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/ContactList-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/ContactList-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/ContactList-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ContactList-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/ContactList-read'
            text/html:
              schema:
                $ref: '#/components/schemas/ContactList-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a ContactList resource.'
      description: 'Retrieves a ContactList resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  /emails:
    get:
      operationId: getEmailCollection
      tags:
        - Email
      responses:
        200:
          description: 'Email collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Email.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Email.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Email-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Email-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Email-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Email-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Email-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Email-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Email-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Email-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Email-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Email-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Email-read'
      summary: 'Retrieves the collection of Email resources.'
      description: 'Retrieves the collection of Email resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[id]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[name]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[email]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[dateCreated]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[dateModified]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[strictly_before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[strictly_after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[strictly_before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[strictly_after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: id
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'id[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: name
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'name[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: email
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'email[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: dateCreated
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: dateModified
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: postEmailCollection
      tags:
        - Email
      responses:
        201:
          description: 'Email resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Email.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Email.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Email-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Email-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Email-read'
          links:
            GetEmailItem:
              operationId: getEmailItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /emails/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a Email resource.'
      description: 'Creates a Email resource.'
      parameters: []
      requestBody:
        description: 'The new Email resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Email.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Email.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Email-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Email-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Email-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Email-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Email-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Email-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Email-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Email-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Email-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Email-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Email-write'
        required: true
      deprecated: false
    parameters: []
  '/emails/{id}':
    get:
      operationId: getEmailItem
      tags:
        - Email
      responses:
        200:
          description: 'Email resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Email.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Email.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Email-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Email-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Email-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a Email resource.'
      description: 'Retrieves a Email resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: putEmailItem
      tags:
        - Email
      responses:
        200:
          description: 'Email resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Email.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Email.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Email-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Email-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Email-read'
          links:
            GetEmailItem:
              operationId: getEmailItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /emails/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the Email resource.'
      description: 'Replaces the Email resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated Email resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Email.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Email.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Email-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Email-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Email-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Email-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Email-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Email-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Email-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Email-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Email-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Email-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Email-write'
        required: true
      deprecated: false
    delete:
      operationId: deleteEmailItem
      tags:
        - Email
      responses:
        204:
          description: 'Email resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the Email resource.'
      description: 'Removes the Email resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/emails/{id}/audit_trail':
    get:
      operationId: get_audit_trailEmailItem
      tags:
        - Email
      responses:
        200:
          description: 'Email resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Email.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Email.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Email-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Email-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Email-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a Email resource.'
      description: 'Retrieves a Email resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/emails/{id}/change_log':
    get:
      operationId: get_change_logsEmailItem
      tags:
        - Email
      responses:
        200:
          description: 'Email resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Email.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Email.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Email-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Email-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Email-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a Email resource.'
      description: 'Retrieves a Email resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  /organizations:
    get:
      operationId: getOrganizationCollection
      tags:
        - Organization
      responses:
        200:
          description: 'Organization collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Organization.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Organization.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization-read'
      summary: 'Retrieves the collection of Organization resources.'
      description: 'Retrieves the collection of Organization resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[id]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[name]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[description]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[type]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[coc]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[vatID]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[dateCreated]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[dateModified]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[sourceOrganization]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[strictly_before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[strictly_after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[strictly_before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[strictly_after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: type
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'type[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: sourceOrganization
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'sourceOrganization[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
      deprecated: false
    post:
      operationId: postOrganizationCollection
      tags:
        - Organization
      responses:
        201:
          description: 'Organization resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Organization.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Organization.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Organization-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Organization-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Organization-read'
          links:
            GetOrganizationItem:
              operationId: getOrganizationItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /organizations/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a Organization resource.'
      description: 'Creates a Organization resource.'
      parameters: []
      requestBody:
        description: 'The new Organization resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Organization.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Organization.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Organization-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Organization-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Organization-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Organization-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Organization-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Organization-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Organization-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Organization-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Organization-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Organization-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Organization-write'
        required: true
      deprecated: false
    parameters: []
  '/organizations/{id}':
    get:
      operationId: getOrganizationItem
      tags:
        - Organization
      responses:
        200:
          description: 'Organization resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Organization.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Organization.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Organization-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Organization-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Organization-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a Organization resource.'
      description: 'Retrieves a Organization resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: putOrganizationItem
      tags:
        - Organization
      responses:
        200:
          description: 'Organization resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Organization.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Organization.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Organization-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Organization-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Organization-read'
          links:
            GetOrganizationItem:
              operationId: getOrganizationItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /organizations/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the Organization resource.'
      description: 'Replaces the Organization resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated Organization resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Organization.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Organization.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Organization-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Organization-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Organization-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Organization-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Organization-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Organization-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Organization-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Organization-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Organization-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Organization-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Organization-write'
        required: true
      deprecated: false
    delete:
      operationId: deleteOrganizationItem
      tags:
        - Organization
      responses:
        204:
          description: 'Organization resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the Organization resource.'
      description: 'Removes the Organization resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/organizations/{id}/audit_trail':
    get:
      operationId: get_audit_trailOrganizationItem
      tags:
        - Organization
      responses:
        200:
          description: 'Organization resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Organization.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Organization.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Organization-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Organization-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Organization-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a Organization resource.'
      description: 'Retrieves a Organization resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/organizations/{id}/change_log':
    get:
      operationId: get_change_logsOrganizationItem
      tags:
        - Organization
      responses:
        200:
          description: 'Organization resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Organization.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Organization.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Organization-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Organization-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Organization-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a Organization resource.'
      description: 'Retrieves a Organization resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  /people:
    get:
      operationId: getPersonCollection
      tags:
        - Person
      responses:
        200:
          description: 'Person collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Person.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Person.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Person-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Person-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Person-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Person-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Person-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Person-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Person-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Person-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Person-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Person-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Person-read'
      summary: 'Retrieves the collection of Person resources.'
      description: 'Retrieves the collection of Person resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[id]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[resource]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[givenName]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[additionalName]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[familyName]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[birthday]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[taxID]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[aboutMe]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[dateCreated]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[dateModified]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[personalPhoto]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[sourceOrganization]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[gender]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[maritalStatus]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[primaryLanguage]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[speakingLanguages]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[contactPreference]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'birthday[before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'birthday[strictly_before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'birthday[after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'birthday[strictly_after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[strictly_before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[strictly_after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[strictly_before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[strictly_after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: sourceOrganization
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'sourceOrganization[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
      deprecated: false
    post:
      operationId: postPersonCollection
      tags:
        - Person
      responses:
        201:
          description: 'Person resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Person.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Person.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Person-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Person-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Person-read'
          links:
            GetPersonItem:
              operationId: getPersonItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /people/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a Person resource.'
      description: 'Creates a Person resource.'
      parameters: []
      requestBody:
        description: 'The new Person resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Person.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Person.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Person-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Person-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Person-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Person-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Person-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Person-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Person-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Person-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Person-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Person-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Person-write'
        required: true
      deprecated: false
    parameters: []
  '/people/{id}':
    get:
      operationId: getPersonItem
      tags:
        - Person
      responses:
        200:
          description: 'Person resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Person.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Person.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Person-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Person-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Person-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a Person resource.'
      description: 'Retrieves a Person resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: putPersonItem
      tags:
        - Person
      responses:
        200:
          description: 'Person resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Person.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Person.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Person-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Person-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Person-read'
          links:
            GetPersonItem:
              operationId: getPersonItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /people/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the Person resource.'
      description: 'Replaces the Person resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated Person resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Person.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Person.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Person-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Person-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Person-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Person-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Person-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Person-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Person-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Person-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Person-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Person-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Person-write'
        required: true
      deprecated: false
    delete:
      operationId: deletePersonItem
      tags:
        - Person
      responses:
        204:
          description: 'Person resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the Person resource.'
      description: 'Removes the Person resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/persons/{id}/audit_trail':
    get:
      operationId: get_audit_trailPersonItem
      tags:
        - Person
      responses:
        200:
          description: 'Person resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Person.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Person.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Person-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Person-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Person-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a Person resource.'
      description: 'Retrieves a Person resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/persons/{id}/change_log':
    get:
      operationId: get_change_logsPersonItem
      tags:
        - Person
      responses:
        200:
          description: 'Person resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Person.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Person.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Person-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Person-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Person-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a Person resource.'
      description: 'Retrieves a Person resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  /socials:
    get:
      operationId: getSocialCollection
      tags:
        - Social
      responses:
        200:
          description: 'Social collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Social.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Social.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Social-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Social-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Social-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Social-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Social-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Social-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Social-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Social-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Social-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Social-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Social-read'
      summary: 'Retrieves the collection of Social resources.'
      description: 'Retrieves the collection of Social resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[id]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[name]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[description]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[type]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[url]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[dateCreated]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[dateModified]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[strictly_before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[strictly_after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[strictly_before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[strictly_after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: type
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'type[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
      deprecated: false
    post:
      operationId: postSocialCollection
      tags:
        - Social
      responses:
        201:
          description: 'Social resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Social.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Social.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Social-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Social-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Social-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Social-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Social-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Social-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Social-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Social-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Social-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Social-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Social-read'
          links:
            GetSocialItem:
              operationId: getSocialItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /socials/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a Social resource.'
      description: 'Creates a Social resource.'
      parameters: []
      requestBody:
        description: 'The new Social resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Social.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Social.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Social-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Social-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Social-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Social-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Social-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Social-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Social-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Social-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Social-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Social-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Social-write'
        required: true
      deprecated: false
    parameters: []
  '/socials/{id}':
    get:
      operationId: getSocialItem
      tags:
        - Social
      responses:
        200:
          description: 'Social resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Social.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Social.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Social-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Social-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Social-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Social-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Social-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Social-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Social-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Social-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Social-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Social-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Social-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a Social resource.'
      description: 'Retrieves a Social resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: putSocialItem
      tags:
        - Social
      responses:
        200:
          description: 'Social resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Social.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Social.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Social-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Social-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Social-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Social-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Social-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Social-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Social-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Social-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Social-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Social-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Social-read'
          links:
            GetSocialItem:
              operationId: getSocialItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /socials/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the Social resource.'
      description: 'Replaces the Social resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated Social resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Social.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Social.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Social-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Social-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Social-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Social-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Social-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Social-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Social-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Social-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Social-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Social-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Social-write'
        required: true
      deprecated: false
    delete:
      operationId: deleteSocialItem
      tags:
        - Social
      responses:
        204:
          description: 'Social resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the Social resource.'
      description: 'Removes the Social resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/socials/{id}/audit_trail':
    get:
      operationId: get_audit_trailSocialItem
      tags:
        - Social
      responses:
        200:
          description: 'Social resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Social.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Social.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Social-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Social-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Social-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Social-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Social-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Social-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Social-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Social-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Social-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Social-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Social-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a Social resource.'
      description: 'Retrieves a Social resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/socials/{id}/change_log':
    get:
      operationId: get_change_logsSocialItem
      tags:
        - Social
      responses:
        200:
          description: 'Social resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Social.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Social.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Social-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Social-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Social-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Social-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Social-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Social-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Social-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Social-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Social-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Social-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Social-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a Social resource.'
      description: 'Retrieves a Social resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  /telephones:
    get:
      operationId: getTelephoneCollection
      tags:
        - Telephone
      responses:
        200:
          description: 'Telephone collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Telephone.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Telephone.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Telephone-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Telephone-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Telephone-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Telephone-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Telephone-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Telephone-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Telephone-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Telephone-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Telephone-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Telephone-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Telephone-read'
      summary: 'Retrieves the collection of Telephone resources.'
      description: 'Retrieves the collection of Telephone resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[id]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[name]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[telephone]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[dateCreated]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[dateModified]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[strictly_before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[strictly_after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[strictly_before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[strictly_after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: id
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'id[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: name
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'name[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: telephone
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'telephone[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: dateCreated
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: dateModified
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: postTelephoneCollection
      tags:
        - Telephone
      responses:
        201:
          description: 'Telephone resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Telephone.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Telephone.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Telephone-read'
          links:
            GetTelephoneItem:
              operationId: getTelephoneItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /telephones/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a Telephone resource.'
      description: 'Creates a Telephone resource.'
      parameters: []
      requestBody:
        description: 'The new Telephone resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Telephone.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Telephone.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Telephone-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Telephone-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Telephone-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Telephone-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Telephone-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Telephone-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Telephone-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Telephone-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Telephone-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Telephone-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Telephone-write'
        required: true
      deprecated: false
    parameters: []
  '/telephones/{id}':
    get:
      operationId: getTelephoneItem
      tags:
        - Telephone
      responses:
        200:
          description: 'Telephone resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Telephone.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Telephone.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Telephone-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a Telephone resource.'
      description: 'Retrieves a Telephone resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: putTelephoneItem
      tags:
        - Telephone
      responses:
        200:
          description: 'Telephone resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Telephone.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Telephone.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Telephone-read'
          links:
            GetTelephoneItem:
              operationId: getTelephoneItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /telephones/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the Telephone resource.'
      description: 'Replaces the Telephone resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated Telephone resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Telephone.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Telephone.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Telephone-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Telephone-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Telephone-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Telephone-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Telephone-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Telephone-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Telephone-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Telephone-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Telephone-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Telephone-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Telephone-write'
        required: true
      deprecated: false
    delete:
      operationId: deleteTelephoneItem
      tags:
        - Telephone
      responses:
        204:
          description: 'Telephone resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the Telephone resource.'
      description: 'Removes the Telephone resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/telephones/{id}/audit_trail':
    get:
      operationId: get_audit_trailTelephoneItem
      tags:
        - Telephone
      responses:
        200:
          description: 'Telephone resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Telephone.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Telephone.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Telephone-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a Telephone resource.'
      description: 'Retrieves a Telephone resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/telephones/{id}/change_log':
    get:
      operationId: get_change_logsTelephoneItem
      tags:
        - Telephone
      responses:
        200:
          description: 'Telephone resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Telephone.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Telephone.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Telephone-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a Telephone resource.'
      description: 'Retrieves a Telephone resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
components:
  schemas:
    Address-read:
      type: object
      description: 'All properties that the entity Address holds.'
      properties:
        id:
          format: uuid
          readOnly: true
          description: 'Uuid of this address'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        name:
          maxLength: 255
          description: 'Name of this Address'
          type: string
          nullable: true
        bagnummeraanduiding:
          maxLength: 16
          description: 'Bagnummeraanduiding of this Address'
          type: string
          nullable: true
        street:
          maxLength: 255
          description: 'Street of this Address'
          type: string
          nullable: true
        houseNumber:
          maxLength: 255
          description: 'House number of this Address'
          type: string
          nullable: true
        houseNumberSuffix:
          maxLength: 255
          description: 'House number suffix of this Address'
          type: string
          nullable: true
        postalCode:
          description: 'Postalcode of a Address'
          type: string
          nullable: true
        region:
          maxLength: 255
          description: 'region Region of a Address'
          type: string
          nullable: true
        locality:
          maxLength: 255
          description: 'Locality of a Address'
          type: string
          nullable: true
        country:
          maxLength: 255
          description: 'Country of a Address'
          type: string
          nullable: true
        postOfficeBoxNumber:
          maxLength: 255
          description: 'Post office box number of a Address'
          type: string
          nullable: true
        dateCreated:
          description: 'The moment this resource was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this resource last Modified'
          type: string
          format: date-time
          nullable: true
    Address-write:
      type: object
      description: 'All properties that the entity Address holds.'
      properties:
        name:
          maxLength: 255
          description: 'Name of this Address'
          type: string
          nullable: true
        bagnummeraanduiding:
          maxLength: 16
          description: 'Bagnummeraanduiding of this Address'
          type: string
          nullable: true
        street:
          maxLength: 255
          description: 'Street of this Address'
          type: string
          nullable: true
        houseNumber:
          maxLength: 255
          description: 'House number of this Address'
          type: string
          nullable: true
        houseNumberSuffix:
          maxLength: 255
          description: 'House number suffix of this Address'
          type: string
          nullable: true
        postalCode:
          description: 'Postalcode of a Address'
          type: string
          nullable: true
        region:
          maxLength: 255
          description: 'region Region of a Address'
          type: string
          nullable: true
        locality:
          maxLength: 255
          description: 'Locality of a Address'
          type: string
          nullable: true
        country:
          maxLength: 255
          description: 'Country of a Address'
          type: string
          nullable: true
        postOfficeBoxNumber:
          maxLength: 255
          description: 'Post office box number of a Address'
          type: string
          nullable: true
    Address.jsonld-read:
      type: object
      description: 'All properties that the entity Address holds.'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          format: uuid
          readOnly: true
          description: 'Uuid of this address'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        name:
          maxLength: 255
          description: 'Name of this Address'
          type: string
          nullable: true
        bagnummeraanduiding:
          maxLength: 16
          description: 'Bagnummeraanduiding of this Address'
          type: string
          nullable: true
        street:
          maxLength: 255
          description: 'Street of this Address'
          type: string
          nullable: true
        houseNumber:
          maxLength: 255
          description: 'House number of this Address'
          type: string
          nullable: true
        houseNumberSuffix:
          maxLength: 255
          description: 'House number suffix of this Address'
          type: string
          nullable: true
        postalCode:
          description: 'Postalcode of a Address'
          type: string
          nullable: true
        region:
          maxLength: 255
          description: 'region Region of a Address'
          type: string
          nullable: true
        locality:
          maxLength: 255
          description: 'Locality of a Address'
          type: string
          nullable: true
        country:
          maxLength: 255
          description: 'Country of a Address'
          type: string
          nullable: true
        postOfficeBoxNumber:
          maxLength: 255
          description: 'Post office box number of a Address'
          type: string
          nullable: true
        dateCreated:
          description: 'The moment this resource was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this resource last Modified'
          type: string
          format: date-time
          nullable: true
    Address.jsonld-write:
      type: object
      description: 'All properties that the entity Address holds.'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        name:
          maxLength: 255
          description: 'Name of this Address'
          type: string
          nullable: true
        bagnummeraanduiding:
          maxLength: 16
          description: 'Bagnummeraanduiding of this Address'
          type: string
          nullable: true
        street:
          maxLength: 255
          description: 'Street of this Address'
          type: string
          nullable: true
        houseNumber:
          maxLength: 255
          description: 'House number of this Address'
          type: string
          nullable: true
        houseNumberSuffix:
          maxLength: 255
          description: 'House number suffix of this Address'
          type: string
          nullable: true
        postalCode:
          description: 'Postalcode of a Address'
          type: string
          nullable: true
        region:
          maxLength: 255
          description: 'region Region of a Address'
          type: string
          nullable: true
        locality:
          maxLength: 255
          description: 'Locality of a Address'
          type: string
          nullable: true
        country:
          maxLength: 255
          description: 'Country of a Address'
          type: string
          nullable: true
        postOfficeBoxNumber:
          maxLength: 255
          description: 'Post office box number of a Address'
          type: string
          nullable: true
    AuditTrail-read:
      type: object
      description: 'An resource representing a log line.'
      properties:
        id:
          format: uuid
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        application:
          maxLength: 255
          writeOnly: true
          description: 'The application that made the request'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        request:
          maxLength: 255
          description: 'The id of the request within that application'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        user:
          maxLength: 255
          description: 'The user on behalf of wich the request was made'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        subject:
          maxLength: 255
          description: '???'
          type: string
          nullable: true
        process:
          maxLength: 255
          description: 'The procces on behalf of wich the request was made'
          type: string
          nullable: true
        dataElements:
          description: 'The moment this request was created'
          type: array
          items:
            type: string
          nullable: true
        dataSubjects:
          description: 'The moment this request was created'
          type: array
          items:
            type: string
          nullable: true
        resource:
          maxLength: 255
          description: 'The resource that was requested'
          type: string
          nullable: true
        resourceType:
          maxLength: 255
          description: 'The type of the resource that was requested'
          type: string
          nullable: true
        route:
          maxLength: 255
          description: 'The moment this request was created'
          type: string
          nullable: true
        endpoint:
          maxLength: 255
          description: 'The endpoint that the request was made to'
          type: string
          nullable: true
        method:
          maxLength: 255
          description: 'The method that was used'
          type: string
          nullable: true
        accept:
          maxLength: 255
          description: 'The contentType that was reqousted'
          type: string
          nullable: true
        contentType:
          maxLength: 255
          description: 'The contentType that was suplieds'
          type: string
          nullable: true
        content:
          maxLength: 2555
          description: 'The moment this request was created'
          type: string
          nullable: true
        ip:
          maxLength: 255
          description: 'The moment this request was created'
          type: string
          nullable: true
        session:
          maxLength: 255
          description: 'The moment this request was created'
          type: string
        headers:
          description: 'The headers supplied by client'
          type: array
          items:
            type: string
        statusCode:
          description: 'The status code returned to client'
          type: integer
          nullable: true
        notFound:
          description: 'Whether or not the reqousted endpoint was found'
          type: boolean
          nullable: true
        forbidden:
          description: 'Whether or not the client was allowed to the reqousted endpoint'
          type: boolean
          nullable: true
        ok:
          description: 'Whether or not there where any problems'
          default: true
          example: true
          type: boolean
          nullable: true
        dateCreated:
          description: 'The moment this request was created'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request last Modified'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
    AuditTrail-write:
      type: object
      description: 'An resource representing a log line.'
    AuditTrail.jsonld-read:
      type: object
      description: 'An resource representing a log line.'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          format: uuid
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        application:
          maxLength: 255
          writeOnly: true
          description: 'The application that made the request'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        request:
          maxLength: 255
          description: 'The id of the request within that application'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        user:
          maxLength: 255
          description: 'The user on behalf of wich the request was made'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        subject:
          maxLength: 255
          description: '???'
          type: string
          nullable: true
        process:
          maxLength: 255
          description: 'The procces on behalf of wich the request was made'
          type: string
          nullable: true
        dataElements:
          description: 'The moment this request was created'
          type: array
          items:
            type: string
          nullable: true
        dataSubjects:
          description: 'The moment this request was created'
          type: array
          items:
            type: string
          nullable: true
        resource:
          maxLength: 255
          description: 'The resource that was requested'
          type: string
          nullable: true
        resourceType:
          maxLength: 255
          description: 'The type of the resource that was requested'
          type: string
          nullable: true
        route:
          maxLength: 255
          description: 'The moment this request was created'
          type: string
          nullable: true
        endpoint:
          maxLength: 255
          description: 'The endpoint that the request was made to'
          type: string
          nullable: true
        method:
          maxLength: 255
          description: 'The method that was used'
          type: string
          nullable: true
        accept:
          maxLength: 255
          description: 'The contentType that was reqousted'
          type: string
          nullable: true
        contentType:
          maxLength: 255
          description: 'The contentType that was suplieds'
          type: string
          nullable: true
        content:
          maxLength: 2555
          description: 'The moment this request was created'
          type: string
          nullable: true
        ip:
          maxLength: 255
          description: 'The moment this request was created'
          type: string
          nullable: true
        session:
          maxLength: 255
          description: 'The moment this request was created'
          type: string
        headers:
          description: 'The headers supplied by client'
          type: array
          items:
            type: string
        statusCode:
          description: 'The status code returned to client'
          type: integer
          nullable: true
        notFound:
          description: 'Whether or not the reqousted endpoint was found'
          type: boolean
          nullable: true
        forbidden:
          description: 'Whether or not the client was allowed to the reqousted endpoint'
          type: boolean
          nullable: true
        ok:
          description: 'Whether or not there where any problems'
          default: true
          example: true
          type: boolean
          nullable: true
        dateCreated:
          description: 'The moment this request was created'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request last Modified'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
    AuditTrail.jsonld-write:
      type: object
      description: 'An resource representing a log line.'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
    ChangeLog-read:
      type: object
      description: 'An resource representing a log line.'
      properties:
        id:
          format: uuid
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        action:
          type: string
        objectId:
          type: string
          nullable: true
        objectClass:
          type: string
        version:
          type: integer
        data:
          type: array
          items:
            type: string
          nullable: true
        username:
          type: string
          nullable: true
        session:
          maxLength: 255
          description: 'The moment this request was created'
          type: string
          nullable: true
        dateCreated:
          description: 'The moment this request was created'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request last Modified'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
    ChangeLog-write:
      type: object
      description: 'An resource representing a log line.'
    ChangeLog.jsonld-read:
      type: object
      description: 'An resource representing a log line.'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          format: uuid
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        action:
          type: string
        objectId:
          type: string
          nullable: true
        objectClass:
          type: string
        version:
          type: integer
        data:
          type: array
          items:
            type: string
          nullable: true
        username:
          type: string
          nullable: true
        session:
          maxLength: 255
          description: 'The moment this request was created'
          type: string
          nullable: true
        dateCreated:
          description: 'The moment this request was created'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request last Modified'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
    ChangeLog.jsonld-write:
      type: object
      description: 'An resource representing a log line.'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
    ContactList-read:
      type: object
      description: 'All properties that the entity ContactList holds.'
      properties:
        id:
          readOnly: true
          description: 'UUID of this contact list'
          type: string
          format: uuid
        name:
          maxLength: 255
          description: 'Name of this contact list'
          type: string
        description:
          description: 'Description of this contact list'
          type: string
          nullable: true
        owner:
          description: 'the owner of this contact list'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Person-read'
        people:
          description: 'People this contact list has'
          type: array
          items:
            $ref: '#/components/schemas/Person-read'
        organizations:
          description: 'Organisations this contact list has'
          type: array
          items:
            $ref: '#/components/schemas/Organization-read'
        dateCreated:
          description: 'The moment this resource was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this resource last Modified'
          type: string
          format: date-time
          nullable: true
      required:
        - name
    ContactList-write:
      type: object
      description: 'All properties that the entity ContactList holds.'
      required:
        - name
      properties:
        name:
          maxLength: 255
          description: 'Name of this contact list'
          type: string
        description:
          description: 'Description of this contact list'
          type: string
          nullable: true
        owner:
          description: 'the owner of this contact list'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Person-write'
        people:
          description: 'People this contact list has'
          type: array
          items:
            $ref: '#/components/schemas/Person-write'
        organizations:
          description: 'Organisations this contact list has'
          type: array
          items:
            $ref: '#/components/schemas/Organization-write'
    ContactList.jsonld-read:
      type: object
      description: 'All properties that the entity ContactList holds.'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'UUID of this contact list'
          type: string
          format: uuid
        name:
          maxLength: 255
          description: 'Name of this contact list'
          type: string
        description:
          description: 'Description of this contact list'
          type: string
          nullable: true
        owner:
          description: 'the owner of this contact list'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Person.jsonld-read'
        people:
          description: 'People this contact list has'
          type: array
          items:
            $ref: '#/components/schemas/Person.jsonld-read'
        organizations:
          description: 'Organisations this contact list has'
          type: array
          items:
            $ref: '#/components/schemas/Organization.jsonld-read'
        dateCreated:
          description: 'The moment this resource was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this resource last Modified'
          type: string
          format: date-time
          nullable: true
      required:
        - name
    ContactList.jsonld-write:
      type: object
      description: 'All properties that the entity ContactList holds.'
      required:
        - name
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        name:
          maxLength: 255
          description: 'Name of this contact list'
          type: string
        description:
          description: 'Description of this contact list'
          type: string
          nullable: true
        owner:
          description: 'the owner of this contact list'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Person.jsonld-write'
        people:
          description: 'People this contact list has'
          type: array
          items:
            $ref: '#/components/schemas/Person.jsonld-write'
        organizations:
          description: 'Organisations this contact list has'
          type: array
          items:
            $ref: '#/components/schemas/Organization.jsonld-write'
    Email-read:
      type: object
      description: 'All properties that the entity Email holds.'
      properties:
        id:
          readOnly: true
          description: 'UUID of this email'
          type: string
          format: uuid
        name:
          maxLength: 255
          description: 'Name of this email'
          type: string
          nullable: true
        email:
          maxLength: 255
          description: 'Email of this email'
          type: string
        dateCreated:
          description: 'The moment this resource was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this resource last Modified'
          type: string
          format: date-time
          nullable: true
      required:
        - email
    Email-write:
      type: object
      description: 'All properties that the entity Email holds.'
      properties:
        name:
          maxLength: 255
          description: 'Name of this email'
          type: string
          nullable: true
        email:
          maxLength: 255
          description: 'Email of this email'
          type: string
      required:
        - email
    Email.jsonld-read:
      type: object
      description: 'All properties that the entity Email holds.'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'UUID of this email'
          type: string
          format: uuid
        name:
          maxLength: 255
          description: 'Name of this email'
          type: string
          nullable: true
        email:
          maxLength: 255
          description: 'Email of this email'
          type: string
        dateCreated:
          description: 'The moment this resource was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this resource last Modified'
          type: string
          format: date-time
          nullable: true
      required:
        - email
    Email.jsonld-write:
      type: object
      description: 'All properties that the entity Email holds.'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        name:
          maxLength: 255
          description: 'Name of this email'
          type: string
          nullable: true
        email:
          maxLength: 255
          description: 'Email of this email'
          type: string
      required:
        - email
    Organization-read:
      type: object
      description: 'All properties that the entity Organisation holds.'
      properties:
        id:
          readOnly: true
          description: 'UUID of this organisation'
          type: string
          format: uuid
        name:
          maxLength: 255
          description: 'Name of this organisation'
          type: string
        description:
          description: 'Description of this organisation'
          type: string
          nullable: true
        type:
          maxLength: 255
          description: 'Type of this organisation'
          type: string
          nullable: true
        coc:
          maxLength: 15
          description: 'Chamber Of Comerce number of this organisation'
          type: string
          nullable: true
        vatID:
          maxLength: 15
          description: 'Value added tax id of this organisation (btw)'
          type: string
          nullable: true
        parentOrganization:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Organization-read'
        subOrganizations:
          description: 'The sub-organizations of which this organization is the parent organization.'
          type: array
          items:
            $ref: '#/components/schemas/Organization-read'
        telephones:
          description: 'Telephone of this organisation'
          type: array
          items:
            $ref: '#/components/schemas/Telephone-read'
        addresses:
          description: 'Address of this organisation'
          type: array
          items:
            $ref: '#/components/schemas/Address-read'
        socials:
          description: 'Socials of this organisation'
          type: array
          items:
            $ref: '#/components/schemas/Social-read'
        emails:
          description: 'Email of this organisation'
          type: array
          items:
            $ref: '#/components/schemas/Email-read'
        persons:
          description: 'Person of this organisation'
          type: array
          items:
            $ref: '#/components/schemas/Person-read'
        sourceOrganization:
          description: 'The WRC url of the organization that owns this group'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
      required:
        - name
    Organization-write:
      type: object
      description: 'All properties that the entity Organisation holds.'
      required:
        - name
      properties:
        name:
          maxLength: 255
          description: 'Name of this organisation'
          type: string
        description:
          description: 'Description of this organisation'
          type: string
          nullable: true
        type:
          maxLength: 255
          description: 'Type of this organisation'
          type: string
          nullable: true
        coc:
          maxLength: 15
          description: 'Chamber Of Comerce number of this organisation'
          type: string
          nullable: true
        vatID:
          maxLength: 15
          description: 'Value added tax id of this organisation (btw)'
          type: string
          nullable: true
        parentOrganization:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Organization-write'
        subOrganizations:
          description: 'The sub-organizations of which this organization is the parent organization.'
          type: array
          items:
            $ref: '#/components/schemas/Organization-write'
        telephones:
          description: 'Telephone of this organisation'
          type: array
          items:
            $ref: '#/components/schemas/Telephone-write'
        addresses:
          description: 'Address of this organisation'
          type: array
          items:
            $ref: '#/components/schemas/Address-write'
        socials:
          description: 'Socials of this organisation'
          type: array
          items:
            $ref: '#/components/schemas/Social-write'
        emails:
          description: 'Email of this organisation'
          type: array
          items:
            $ref: '#/components/schemas/Email-write'
        persons:
          description: 'Person of this organisation'
          type: array
          items:
            $ref: '#/components/schemas/Person-write'
        sourceOrganization:
          description: 'The WRC url of the organization that owns this group'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
    Organization.jsonld-read:
      type: object
      description: 'All properties that the entity Organisation holds.'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'UUID of this organisation'
          type: string
          format: uuid
        name:
          maxLength: 255
          description: 'Name of this organisation'
          type: string
        description:
          description: 'Description of this organisation'
          type: string
          nullable: true
        type:
          maxLength: 255
          description: 'Type of this organisation'
          type: string
          nullable: true
        coc:
          maxLength: 15
          description: 'Chamber Of Comerce number of this organisation'
          type: string
          nullable: true
        vatID:
          maxLength: 15
          description: 'Value added tax id of this organisation (btw)'
          type: string
          nullable: true
        parentOrganization:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Organization.jsonld-read'
        subOrganizations:
          description: 'The sub-organizations of which this organization is the parent organization.'
          type: array
          items:
            $ref: '#/components/schemas/Organization.jsonld-read'
        telephones:
          description: 'Telephone of this organisation'
          type: array
          items:
            $ref: '#/components/schemas/Telephone.jsonld-read'
        addresses:
          description: 'Address of this organisation'
          type: array
          items:
            $ref: '#/components/schemas/Address.jsonld-read'
        socials:
          description: 'Socials of this organisation'
          type: array
          items:
            $ref: '#/components/schemas/Social.jsonld-read'
        emails:
          description: 'Email of this organisation'
          type: array
          items:
            $ref: '#/components/schemas/Email.jsonld-read'
        persons:
          description: 'Person of this organisation'
          type: array
          items:
            $ref: '#/components/schemas/Person.jsonld-read'
        sourceOrganization:
          description: 'The WRC url of the organization that owns this group'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
      required:
        - name
    Organization.jsonld-write:
      type: object
      description: 'All properties that the entity Organisation holds.'
      required:
        - name
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        name:
          maxLength: 255
          description: 'Name of this organisation'
          type: string
        description:
          description: 'Description of this organisation'
          type: string
          nullable: true
        type:
          maxLength: 255
          description: 'Type of this organisation'
          type: string
          nullable: true
        coc:
          maxLength: 15
          description: 'Chamber Of Comerce number of this organisation'
          type: string
          nullable: true
        vatID:
          maxLength: 15
          description: 'Value added tax id of this organisation (btw)'
          type: string
          nullable: true
        parentOrganization:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Organization.jsonld-write'
        subOrganizations:
          description: 'The sub-organizations of which this organization is the parent organization.'
          type: array
          items:
            $ref: '#/components/schemas/Organization.jsonld-write'
        telephones:
          description: 'Telephone of this organisation'
          type: array
          items:
            $ref: '#/components/schemas/Telephone.jsonld-write'
        addresses:
          description: 'Address of this organisation'
          type: array
          items:
            $ref: '#/components/schemas/Address.jsonld-write'
        socials:
          description: 'Socials of this organisation'
          type: array
          items:
            $ref: '#/components/schemas/Social.jsonld-write'
        emails:
          description: 'Email of this organisation'
          type: array
          items:
            $ref: '#/components/schemas/Email.jsonld-write'
        persons:
          description: 'Person of this organisation'
          type: array
          items:
            $ref: '#/components/schemas/Person.jsonld-write'
        sourceOrganization:
          description: 'The WRC url of the organization that owns this group'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
    Person-read:
      type: object
      description: 'All properties that the entity Person holds.'
      properties:
        id:
          readOnly: true
          description: 'UUID of this person'
          type: string
          format: uuid
        resource:
          description: 'A specific commonground resource'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        name:
          readOnly: true
          description: 'The full name of a person consisting of given and fammily name'
          type: string
        formalName:
          readOnly: true
          description: 'The full name of a person consisting of fammily and given name'
          type: string
        givenName:
          maxLength: 255
          description: 'Given name of this person'
          type: string
        additionalName:
          maxLength: 255
          description: 'Additional name of this person'
          type: string
          nullable: true
        familyName:
          maxLength: 255
          description: 'Family name of this person'
          type: string
          nullable: true
        birthday:
          description: 'Date of birth of this person'
          type: string
          format: date-time
          nullable: true
        taxID:
          maxLength: 255
          description: 'TIN, CIF, NIF or BSN'
          type: string
          nullable: true
        aboutMe:
          maxLength: 255
          description: 'Information about this person'
          type: string
          nullable: true
        telephones:
          description: 'Telephone of this person'
          type: array
          items:
            $ref: '#/components/schemas/Telephone-read'
        addresses:
          description: 'Addresses of this person'
          type: array
          items:
            $ref: '#/components/schemas/Address-read'
        socials:
          description: 'Socials of this person'
          type: array
          items:
            $ref: '#/components/schemas/Social-read'
        emails:
          description: 'Emails of this person'
          type: array
          items:
            $ref: '#/components/schemas/Email-read'
        organization:
          description: 'Organisations of this person'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Organization-read'
        ownedContactLists:
          description: 'the contact lists this person owns'
          type: array
          items:
            $ref: '#/components/schemas/ContactList-read'
        contactLists:
          description: 'the contact lists this person is on'
          type: array
          items:
            $ref: '#/components/schemas/ContactList-read'
        dateCreated:
          description: 'The moment this resource was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this resource last Modified'
          type: string
          format: date-time
          nullable: true
        personalPhoto:
          description: 'Base64 of the image'
          type: string
          nullable: true
        sourceOrganization:
          description: 'The WRC url of the organization that owns this group'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        gender:
          description: 'The gender of the person. **Male**, **Female**'
          type: string
          nullable: true
        birthplace:
          description: 'Birthplace of this person'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Address-read'
        maritalStatus:
          description: 'The marital status of the person. **MARRIED_PARTNER**, **SINGLE**, **DIVORCED**, **WIDOW**'
          type: string
          nullable: true
        primaryLanguage:
          description: 'The primary language of the person.'
          type: string
          nullable: true
        speakingLanguages:
          description: 'The speaking languages of the person.'
          type: array
          items:
            type: string
          nullable: true
        contactPreference:
          description: 'The contact preference of the person.'
          type: string
          nullable: true
      required:
        - givenName
    Person-write:
      type: object
      description: 'All properties that the entity Person holds.'
      properties:
        resource:
          description: 'A specific commonground resource'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        givenName:
          maxLength: 255
          description: 'Given name of this person'
          type: string
        additionalName:
          maxLength: 255
          description: 'Additional name of this person'
          type: string
          nullable: true
        familyName:
          maxLength: 255
          description: 'Family name of this person'
          type: string
          nullable: true
        birthday:
          description: 'Date of birth of this person'
          type: string
          format: date-time
          nullable: true
        taxID:
          maxLength: 255
          description: 'TIN, CIF, NIF or BSN'
          type: string
          nullable: true
        aboutMe:
          maxLength: 255
          description: 'Information about this person'
          type: string
          nullable: true
        telephones:
          description: 'Telephone of this person'
          type: array
          items:
            $ref: '#/components/schemas/Telephone-write'
        addresses:
          description: 'Addresses of this person'
          type: array
          items:
            $ref: '#/components/schemas/Address-write'
        socials:
          description: 'Socials of this person'
          type: array
          items:
            $ref: '#/components/schemas/Social-write'
        emails:
          description: 'Emails of this person'
          type: array
          items:
            $ref: '#/components/schemas/Email-write'
        organization:
          description: 'Organisations of this person'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Organization-write'
        ownedContactLists:
          description: 'the contact lists this person owns'
          type: array
          items:
            $ref: '#/components/schemas/ContactList-write'
        contactLists:
          description: 'the contact lists this person is on'
          type: array
          items:
            $ref: '#/components/schemas/ContactList-write'
        personalPhoto:
          description: 'Base64 of the image'
          type: string
          nullable: true
        sourceOrganization:
          description: 'The WRC url of the organization that owns this group'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        gender:
          description: 'The gender of the person. **Male**, **Female**'
          type: string
          nullable: true
        birthplace:
          description: 'Birthplace of this person'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Address-write'
        maritalStatus:
          description: 'The marital status of the person. **MARRIED_PARTNER**, **SINGLE**, **DIVORCED**, **WIDOW**'
          type: string
          nullable: true
        primaryLanguage:
          description: 'The primary language of the person.'
          type: string
          nullable: true
        speakingLanguages:
          description: 'The speaking languages of the person.'
          type: array
          items:
            type: string
          nullable: true
        contactPreference:
          description: 'The contact preference of the person.'
          type: string
          nullable: true
      required:
        - givenName
    Person.jsonld-read:
      type: object
      description: 'All properties that the entity Person holds.'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'UUID of this person'
          type: string
          format: uuid
        resource:
          description: 'A specific commonground resource'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        name:
          readOnly: true
          description: 'The full name of a person consisting of given and fammily name'
          type: string
        formalName:
          readOnly: true
          description: 'The full name of a person consisting of fammily and given name'
          type: string
        givenName:
          maxLength: 255
          description: 'Given name of this person'
          type: string
        additionalName:
          maxLength: 255
          description: 'Additional name of this person'
          type: string
          nullable: true
        familyName:
          maxLength: 255
          description: 'Family name of this person'
          type: string
          nullable: true
        birthday:
          description: 'Date of birth of this person'
          type: string
          format: date-time
          nullable: true
        taxID:
          maxLength: 255
          description: 'TIN, CIF, NIF or BSN'
          type: string
          nullable: true
        aboutMe:
          maxLength: 255
          description: 'Information about this person'
          type: string
          nullable: true
        telephones:
          description: 'Telephone of this person'
          type: array
          items:
            $ref: '#/components/schemas/Telephone.jsonld-read'
        addresses:
          description: 'Addresses of this person'
          type: array
          items:
            $ref: '#/components/schemas/Address.jsonld-read'
        socials:
          description: 'Socials of this person'
          type: array
          items:
            $ref: '#/components/schemas/Social.jsonld-read'
        emails:
          description: 'Emails of this person'
          type: array
          items:
            $ref: '#/components/schemas/Email.jsonld-read'
        organization:
          description: 'Organisations of this person'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Organization.jsonld-read'
        ownedContactLists:
          description: 'the contact lists this person owns'
          type: array
          items:
            $ref: '#/components/schemas/ContactList.jsonld-read'
        contactLists:
          description: 'the contact lists this person is on'
          type: array
          items:
            $ref: '#/components/schemas/ContactList.jsonld-read'
        dateCreated:
          description: 'The moment this resource was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this resource last Modified'
          type: string
          format: date-time
          nullable: true
        personalPhoto:
          description: 'Base64 of the image'
          type: string
          nullable: true
        sourceOrganization:
          description: 'The WRC url of the organization that owns this group'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        gender:
          description: 'The gender of the person. **Male**, **Female**'
          type: string
          nullable: true
        birthplace:
          description: 'Birthplace of this person'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Address.jsonld-read'
        maritalStatus:
          description: 'The marital status of the person. **MARRIED_PARTNER**, **SINGLE**, **DIVORCED**, **WIDOW**'
          type: string
          nullable: true
        primaryLanguage:
          description: 'The primary language of the person.'
          type: string
          nullable: true
        speakingLanguages:
          description: 'The speaking languages of the person.'
          type: array
          items:
            type: string
          nullable: true
        contactPreference:
          description: 'The contact preference of the person.'
          type: string
          nullable: true
      required:
        - givenName
    Person.jsonld-write:
      type: object
      description: 'All properties that the entity Person holds.'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        resource:
          description: 'A specific commonground resource'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        givenName:
          maxLength: 255
          description: 'Given name of this person'
          type: string
        additionalName:
          maxLength: 255
          description: 'Additional name of this person'
          type: string
          nullable: true
        familyName:
          maxLength: 255
          description: 'Family name of this person'
          type: string
          nullable: true
        birthday:
          description: 'Date of birth of this person'
          type: string
          format: date-time
          nullable: true
        taxID:
          maxLength: 255
          description: 'TIN, CIF, NIF or BSN'
          type: string
          nullable: true
        aboutMe:
          maxLength: 255
          description: 'Information about this person'
          type: string
          nullable: true
        telephones:
          description: 'Telephone of this person'
          type: array
          items:
            $ref: '#/components/schemas/Telephone.jsonld-write'
        addresses:
          description: 'Addresses of this person'
          type: array
          items:
            $ref: '#/components/schemas/Address.jsonld-write'
        socials:
          description: 'Socials of this person'
          type: array
          items:
            $ref: '#/components/schemas/Social.jsonld-write'
        emails:
          description: 'Emails of this person'
          type: array
          items:
            $ref: '#/components/schemas/Email.jsonld-write'
        organization:
          description: 'Organisations of this person'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Organization.jsonld-write'
        ownedContactLists:
          description: 'the contact lists this person owns'
          type: array
          items:
            $ref: '#/components/schemas/ContactList.jsonld-write'
        contactLists:
          description: 'the contact lists this person is on'
          type: array
          items:
            $ref: '#/components/schemas/ContactList.jsonld-write'
        personalPhoto:
          description: 'Base64 of the image'
          type: string
          nullable: true
        sourceOrganization:
          description: 'The WRC url of the organization that owns this group'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        gender:
          description: 'The gender of the person. **Male**, **Female**'
          type: string
          nullable: true
        birthplace:
          description: 'Birthplace of this person'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Address.jsonld-write'
        maritalStatus:
          description: 'The marital status of the person. **MARRIED_PARTNER**, **SINGLE**, **DIVORCED**, **WIDOW**'
          type: string
          nullable: true
        primaryLanguage:
          description: 'The primary language of the person.'
          type: string
          nullable: true
        speakingLanguages:
          description: 'The speaking languages of the person.'
          type: array
          items:
            type: string
          nullable: true
        contactPreference:
          description: 'The contact preference of the person.'
          type: string
          nullable: true
      required:
        - givenName
    Social-read:
      type: object
      description: 'All properties that the entity Social holds.'
      properties:
        id:
          readOnly: true
          description: 'UUID of this telephone'
          type: string
          format: uuid
        name:
          maxLength: 255
          description: 'Name of this social'
          type: string
        description:
          description: 'Description of this social'
          type: string
          nullable: true
        type:
          description: 'The type of this social. Options: (website, twitter, facebook, linkedin, instagram, github, other)'
          default: other
          example: other
          type: string
        url:
          maxLength: 255
          description: 'Url of this social'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        dateCreated:
          description: 'The moment this resource was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this resource last Modified'
          type: string
          format: date-time
          nullable: true
      required:
        - name
        - url
    Social-write:
      type: object
      description: 'All properties that the entity Social holds.'
      required:
        - name
        - url
      properties:
        name:
          maxLength: 255
          description: 'Name of this social'
          type: string
        description:
          description: 'Description of this social'
          type: string
          nullable: true
        type:
          description: 'The type of this social. Options: (website, twitter, facebook, linkedin, instagram, github, other)'
          default: other
          example: other
          type: string
        url:
          maxLength: 255
          description: 'Url of this social'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
    Social.jsonld-read:
      type: object
      description: 'All properties that the entity Social holds.'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'UUID of this telephone'
          type: string
          format: uuid
        name:
          maxLength: 255
          description: 'Name of this social'
          type: string
        description:
          description: 'Description of this social'
          type: string
          nullable: true
        type:
          description: 'The type of this social. Options: (website, twitter, facebook, linkedin, instagram, github, other)'
          default: other
          example: other
          type: string
        url:
          maxLength: 255
          description: 'Url of this social'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        dateCreated:
          description: 'The moment this resource was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this resource last Modified'
          type: string
          format: date-time
          nullable: true
      required:
        - name
        - url
    Social.jsonld-write:
      type: object
      description: 'All properties that the entity Social holds.'
      required:
        - name
        - url
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        name:
          maxLength: 255
          description: 'Name of this social'
          type: string
        description:
          description: 'Description of this social'
          type: string
          nullable: true
        type:
          description: 'The type of this social. Options: (website, twitter, facebook, linkedin, instagram, github, other)'
          default: other
          example: other
          type: string
        url:
          maxLength: 255
          description: 'Url of this social'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
    Telephone-read:
      type: object
      description: 'All properties that the entity Telephone holds.'
      properties:
        id:
          readOnly: true
          description: 'UUID of this telephone'
          type: string
          format: uuid
        name:
          maxLength: 255
          description: 'Name of this telephone'
          type: string
          nullable: true
        telephone:
          maxLength: 255
          description: 'The actual phone number including any international prefixes'
          type: string
        dateCreated:
          description: 'The moment this resource was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this resource last Modified'
          type: string
          format: date-time
          nullable: true
      required:
        - telephone
    Telephone-write:
      type: object
      description: 'All properties that the entity Telephone holds.'
      properties:
        name:
          maxLength: 255
          description: 'Name of this telephone'
          type: string
          nullable: true
        telephone:
          maxLength: 255
          description: 'The actual phone number including any international prefixes'
          type: string
      required:
        - telephone
    Telephone.jsonld-read:
      type: object
      description: 'All properties that the entity Telephone holds.'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'UUID of this telephone'
          type: string
          format: uuid
        name:
          maxLength: 255
          description: 'Name of this telephone'
          type: string
          nullable: true
        telephone:
          maxLength: 255
          description: 'The actual phone number including any international prefixes'
          type: string
        dateCreated:
          description: 'The moment this resource was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this resource last Modified'
          type: string
          format: date-time
          nullable: true
      required:
        - telephone
    Telephone.jsonld-write:
      type: object
      description: 'All properties that the entity Telephone holds.'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        name:
          maxLength: 255
          description: 'Name of this telephone'
          type: string
          nullable: true
        telephone:
          maxLength: 255
          description: 'The actual phone number including any international prefixes'
          type: string
      required:
        - telephone
  responses: {  }
  parameters: {  }
  examples: {  }
  requestBodies: {  }
  headers: {  }
  securitySchemes: {  }
security: []
tags: []
