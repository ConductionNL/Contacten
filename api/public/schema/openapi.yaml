openapi: 3.0.2
info:
  title: ''
  version: V1.0
  description: |
    API Details
    - Reference: contactcatalogus
    - Enviroment: dev
    - Version: V1.0
    - Repository: [online](https://github.com/ConductionNL/contactcatalogus) / [zip](https://github.com/ConductionNL/contactcatalogus/archive/master.zip)
    - Datamodel: [postman](schema/contactcatalogus.postman_collection.json) / [oas](schema/openapi.yaml) / [pdf](schema/datamodel.pdf) / [modelio (zip)](schema/Datamodel_Modelio.zip) 
    
    Naast deze JSON rest API is er ook een [graphql](/graphql) interface beschikbaar.         
    
paths:
  /addresses:
    get:
      tags:
        - Address
      operationId: getAddressCollection
      summary: 'Retrieves the collection of Address resources.'
      responses:
        200:
          description: 'Address collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Address:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Address:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Address-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Address-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Address-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Address-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Address-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Address-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Address-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Address-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Address-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Address-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Address-read'
      parameters:
        -
          name: 'order[id]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[name]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[bagnummeraanduiding]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[street]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[houseNumber]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[houseNumberSuffix]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[postalCode]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[region]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[locality]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[country]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[postOfficeBoxNumber]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateCreated]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateModified]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'dateCreated[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: id
          in: query
          required: false
          schema:
            type: string
        -
          name: 'id[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: name
          in: query
          required: false
          schema:
            type: string
        -
          name: 'name[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: bagnummeraanduiding
          in: query
          required: false
          schema:
            type: string
        -
          name: 'bagnummeraanduiding[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: street
          in: query
          required: false
          schema:
            type: string
        -
          name: 'street[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: houseNumber
          in: query
          required: false
          schema:
            type: string
        -
          name: 'houseNumber[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: houseNumberSuffix
          in: query
          required: false
          schema:
            type: string
        -
          name: 'houseNumberSuffix[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: postalCode
          in: query
          required: false
          schema:
            type: string
        -
          name: 'postalCode[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: region
          in: query
          required: false
          schema:
            type: string
        -
          name: 'region[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: locality
          in: query
          required: false
          schema:
            type: string
        -
          name: 'locality[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: country
          in: query
          required: false
          schema:
            type: string
        -
          name: 'country[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: postOfficeBoxNumber
          in: query
          required: false
          schema:
            type: string
        -
          name: 'postOfficeBoxNumber[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: dateCreated
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[]'
          in: query
          required: false
          schema:
            type: string
        -
          name: dateModified
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[]'
          in: query
          required: false
          schema:
            type: string
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: limit
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
            default: 30
            minimum: 0
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - Address
      operationId: postAddressCollection
      summary: 'Creates a Address resource.'
      responses:
        201:
          description: 'Address resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Address:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Address:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Address-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Address-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Address-read'
          links:
            GetAddressItem:
              parameters:
                id: '$response.body#/id'
              operationId: getAddressItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /addresses/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Address:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Address:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Address-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Address-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Address-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Address-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Address-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Address-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Address-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Address-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Address-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Address-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Address-write'
        description: 'The new Address resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/addresses/{id}':
    get:
      tags:
        - Address
      operationId: getAddressItem
      summary: 'Retrieves a Address resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Address resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Address:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Address:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Address-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Address-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Address-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    put:
      tags:
        - Address
      operationId: putAddressItem
      summary: 'Replaces the Address resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Address resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Address:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Address:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Address-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Address-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Address-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Address:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Address:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Address-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Address-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Address-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Address-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Address-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Address-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Address-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Address-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Address-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Address-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Address-write'
        description: 'The updated Address resource'
    delete:
      tags:
        - Address
      operationId: deleteAddressItem
      summary: 'Removes the Address resource.'
      responses:
        204:
          description: 'Address resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/addresses/{id}/audit_trail':
    get:
      tags:
        - Address
      operationId: get_audit_trailAddressItem
      summary: 'Retrieves a Address resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Address resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Address:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Address:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Address-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Address-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Address-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
  '/addresses/{id}/change_log':
    get:
      tags:
        - Address
      operationId: get_change_logsAddressItem
      summary: 'Retrieves a Address resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Address resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Address:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Address:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Address-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Address-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Address-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
  /audit_trails:
    get:
      tags:
        - AuditTrail
      operationId: getAuditTrailCollection
      summary: 'Retrieves the collection of AuditTrail resources.'
      responses:
        200:
          description: 'AuditTrail collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/AuditTrail:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/AuditTrail:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
      parameters:
        -
          name: 'order[application]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[request]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[user]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[subject]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[resource]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[resourceType]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[endpoint]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[contentType]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[content]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[session]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateCreated]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateModified]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: request
          in: query
          required: false
          schema:
            type: string
        -
          name: 'request[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: user
          in: query
          required: false
          schema:
            type: string
        -
          name: 'user[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: subject
          in: query
          required: false
          schema:
            type: string
        -
          name: 'subject[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: resource
          in: query
          required: false
          schema:
            type: string
        -
          name: 'resource[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: resourceType
          in: query
          required: false
          schema:
            type: string
        -
          name: endpoint
          in: query
          required: false
          schema:
            type: string
        -
          name: 'endpoint[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: contentType
          in: query
          required: false
          schema:
            type: string
        -
          name: 'contentType[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: content
          in: query
          required: false
          schema:
            type: string
        -
          name: 'content[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: session
          in: query
          required: false
          schema:
            type: string
        -
          name: 'session[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: 'dateCreated[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: limit
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
            default: 30
            minimum: 0
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - AuditTrail
      operationId: postAuditTrailCollection
      summary: 'Creates a AuditTrail resource.'
      responses:
        201:
          description: 'AuditTrail resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AuditTrail:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/AuditTrail:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/html:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
          links:
            GetAuditTrailItem:
              parameters:
                id: '$response.body#/id'
              operationId: getAuditTrailItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /audit_trails/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/AuditTrail:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/AuditTrail:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          text/html:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
        description: 'The new AuditTrail resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/audit_trails/{id}':
    get:
      tags:
        - AuditTrail
      operationId: getAuditTrailItem
      summary: 'Retrieves a AuditTrail resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'AuditTrail resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AuditTrail:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/AuditTrail:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/html:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    delete:
      tags:
        - AuditTrail
      operationId: deleteAuditTrailItem
      summary: 'Removes the AuditTrail resource.'
      responses:
        204:
          description: 'AuditTrail resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
    put:
      tags:
        - AuditTrail
      operationId: putAuditTrailItem
      summary: 'Replaces the AuditTrail resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'AuditTrail resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AuditTrail:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/AuditTrail:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/html:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/AuditTrail:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/AuditTrail:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          text/html:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
        description: 'The updated AuditTrail resource'
    patch:
      tags:
        - AuditTrail
      operationId: patchAuditTrailItem
      summary: 'Updates the AuditTrail resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'AuditTrail resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AuditTrail:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/AuditTrail:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/html:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/AuditTrail:jsonld-write'
          application/json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          text/html:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
        description: 'The updated AuditTrail resource'
  /change_logs:
    get:
      tags:
        - ChangeLog
      operationId: getChangeLogCollection
      summary: 'Retrieves the collection of ChangeLog resources.'
      responses:
        200:
          description: 'ChangeLog collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/ChangeLog:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/ChangeLog:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
      parameters:
        -
          name: 'order[action]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[objectId]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[objectClass]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[version]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[username]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateCreated]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateModified]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: action
          in: query
          required: false
          schema:
            type: string
        -
          name: 'action[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: objectId
          in: query
          required: false
          schema:
            type: string
        -
          name: 'objectId[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: objectClass
          in: query
          required: false
          schema:
            type: string
        -
          name: 'objectClass[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: version
          in: query
          required: false
          schema:
            type: integer
        -
          name: 'version[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
          style: form
          explode: true
        -
          name: 'dateCreated[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: limit
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
            default: 30
            minimum: 0
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - ChangeLog
      operationId: postChangeLogCollection
      summary: 'Creates a ChangeLog resource.'
      responses:
        201:
          description: 'ChangeLog resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ChangeLog:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/ChangeLog:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/html:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
          links:
            GetChangeLogItem:
              parameters:
                id: '$response.body#/id'
              operationId: getChangeLogItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /change_logs/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/ChangeLog:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/ChangeLog:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          text/html:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
        description: 'The new ChangeLog resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/change_logs/{id}':
    get:
      tags:
        - ChangeLog
      operationId: getChangeLogItem
      summary: 'Retrieves a ChangeLog resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'ChangeLog resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ChangeLog:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/ChangeLog:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/html:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    delete:
      tags:
        - ChangeLog
      operationId: deleteChangeLogItem
      summary: 'Removes the ChangeLog resource.'
      responses:
        204:
          description: 'ChangeLog resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
    put:
      tags:
        - ChangeLog
      operationId: putChangeLogItem
      summary: 'Replaces the ChangeLog resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'ChangeLog resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ChangeLog:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/ChangeLog:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/html:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/ChangeLog:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/ChangeLog:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          text/html:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
        description: 'The updated ChangeLog resource'
    patch:
      tags:
        - ChangeLog
      operationId: patchChangeLogItem
      summary: 'Updates the ChangeLog resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'ChangeLog resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ChangeLog:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/ChangeLog:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/html:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/ChangeLog:jsonld-write'
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          text/html:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
        description: 'The updated ChangeLog resource'
  /contact_lists:
    get:
      tags:
        - ContactList
      operationId: getContactListCollection
      summary: 'Retrieves the collection of ContactList resources.'
      responses:
        200:
          description: 'ContactList collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/ContactList:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/ContactList:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ContactList-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ContactList-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ContactList-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ContactList-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ContactList-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ContactList-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ContactList-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ContactList-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ContactList-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ContactList-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ContactList-read'
      parameters:
        -
          name: 'order[id]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[name]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[description]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateCreated]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateModified]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'dateCreated[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: id
          in: query
          required: false
          schema:
            type: string
        -
          name: 'id[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: name
          in: query
          required: false
          schema:
            type: string
        -
          name: 'name[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: description
          in: query
          required: false
          schema:
            type: string
        -
          name: 'description[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: dateCreated
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[]'
          in: query
          required: false
          schema:
            type: string
        -
          name: dateModified
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[]'
          in: query
          required: false
          schema:
            type: string
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: limit
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
            default: 30
            minimum: 0
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - ContactList
      operationId: postContactListCollection
      summary: 'Creates a ContactList resource.'
      responses:
        201:
          description: 'ContactList resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ContactList:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/ContactList:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ContactList-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/ContactList-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ContactList-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/ContactList-read'
            application/json:
              schema:
                $ref: '#/components/schemas/ContactList-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/ContactList-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/ContactList-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/ContactList-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ContactList-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/ContactList-read'
            text/html:
              schema:
                $ref: '#/components/schemas/ContactList-read'
          links:
            GetContactListItem:
              parameters:
                id: '$response.body#/id'
              operationId: getContactListItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /contact_lists/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/ContactList:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/ContactList:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ContactList-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/ContactList-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/ContactList-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/ContactList-write'
          application/json:
            schema:
              $ref: '#/components/schemas/ContactList-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/ContactList-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/ContactList-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/ContactList-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/ContactList-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/ContactList-write'
          text/html:
            schema:
              $ref: '#/components/schemas/ContactList-write'
        description: 'The new ContactList resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/contact_lists/{id}':
    get:
      tags:
        - ContactList
      operationId: getContactListItem
      summary: 'Retrieves a ContactList resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'ContactList resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ContactList:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/ContactList:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ContactList-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/ContactList-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ContactList-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/ContactList-read'
            application/json:
              schema:
                $ref: '#/components/schemas/ContactList-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/ContactList-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/ContactList-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/ContactList-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ContactList-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/ContactList-read'
            text/html:
              schema:
                $ref: '#/components/schemas/ContactList-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    put:
      tags:
        - ContactList
      operationId: putContactListItem
      summary: 'Replaces the ContactList resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'ContactList resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ContactList:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/ContactList:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ContactList-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/ContactList-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ContactList-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/ContactList-read'
            application/json:
              schema:
                $ref: '#/components/schemas/ContactList-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/ContactList-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/ContactList-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/ContactList-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ContactList-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/ContactList-read'
            text/html:
              schema:
                $ref: '#/components/schemas/ContactList-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/ContactList:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/ContactList:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ContactList-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/ContactList-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/ContactList-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/ContactList-write'
          application/json:
            schema:
              $ref: '#/components/schemas/ContactList-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/ContactList-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/ContactList-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/ContactList-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/ContactList-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/ContactList-write'
          text/html:
            schema:
              $ref: '#/components/schemas/ContactList-write'
        description: 'The updated ContactList resource'
    delete:
      tags:
        - ContactList
      operationId: deleteContactListItem
      summary: 'Removes the ContactList resource.'
      responses:
        204:
          description: 'ContactList resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/contact_lists/{id}/audit_trail':
    get:
      tags:
        - ContactList
      operationId: get_audit_trailContactListItem
      summary: 'Retrieves a ContactList resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'ContactList resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ContactList:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/ContactList:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ContactList-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/ContactList-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ContactList-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/ContactList-read'
            application/json:
              schema:
                $ref: '#/components/schemas/ContactList-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/ContactList-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/ContactList-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/ContactList-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ContactList-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/ContactList-read'
            text/html:
              schema:
                $ref: '#/components/schemas/ContactList-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
  '/contact_lists/{id}/change_log':
    get:
      tags:
        - ContactList
      operationId: get_change_logsContactListItem
      summary: 'Retrieves a ContactList resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'ContactList resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ContactList:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/ContactList:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ContactList-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/ContactList-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ContactList-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/ContactList-read'
            application/json:
              schema:
                $ref: '#/components/schemas/ContactList-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/ContactList-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/ContactList-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/ContactList-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ContactList-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/ContactList-read'
            text/html:
              schema:
                $ref: '#/components/schemas/ContactList-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
  /emails:
    get:
      tags:
        - Email
      operationId: getEmailCollection
      summary: 'Retrieves the collection of Email resources.'
      responses:
        200:
          description: 'Email collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Email:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Email:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Email-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Email-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Email-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Email-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Email-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Email-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Email-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Email-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Email-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Email-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Email-read'
      parameters:
        -
          name: 'order[id]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[name]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[email]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateCreated]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateModified]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'dateCreated[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: id
          in: query
          required: false
          schema:
            type: string
        -
          name: 'id[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: name
          in: query
          required: false
          schema:
            type: string
        -
          name: 'name[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: email
          in: query
          required: false
          schema:
            type: string
        -
          name: 'email[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: dateCreated
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[]'
          in: query
          required: false
          schema:
            type: string
        -
          name: dateModified
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[]'
          in: query
          required: false
          schema:
            type: string
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: limit
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
            default: 30
            minimum: 0
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - Email
      operationId: postEmailCollection
      summary: 'Creates a Email resource.'
      responses:
        201:
          description: 'Email resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Email:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Email:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Email-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Email-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Email-read'
          links:
            GetEmailItem:
              parameters:
                id: '$response.body#/id'
              operationId: getEmailItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /emails/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Email:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Email:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Email-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Email-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Email-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Email-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Email-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Email-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Email-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Email-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Email-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Email-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Email-write'
        description: 'The new Email resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/emails/{id}':
    get:
      tags:
        - Email
      operationId: getEmailItem
      summary: 'Retrieves a Email resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Email resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Email:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Email:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Email-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Email-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Email-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    put:
      tags:
        - Email
      operationId: putEmailItem
      summary: 'Replaces the Email resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Email resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Email:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Email:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Email-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Email-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Email-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Email:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Email:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Email-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Email-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Email-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Email-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Email-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Email-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Email-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Email-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Email-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Email-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Email-write'
        description: 'The updated Email resource'
    delete:
      tags:
        - Email
      operationId: deleteEmailItem
      summary: 'Removes the Email resource.'
      responses:
        204:
          description: 'Email resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/emails/{id}/audit_trail':
    get:
      tags:
        - Email
      operationId: get_audit_trailEmailItem
      summary: 'Retrieves a Email resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Email resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Email:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Email:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Email-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Email-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Email-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
  '/emails/{id}/change_log':
    get:
      tags:
        - Email
      operationId: get_change_logsEmailItem
      summary: 'Retrieves a Email resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Email resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Email:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Email:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Email-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Email-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Email-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
  /organizations:
    get:
      tags:
        - Organization
      operationId: getOrganizationCollection
      summary: 'Retrieves the collection of Organization resources.'
      responses:
        200:
          description: 'Organization collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Organization:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Organization:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization-read'
      parameters:
        -
          name: 'order[id]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[name]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[description]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[type]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[coc]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[vatID]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateCreated]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateModified]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[sourceOrganization]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'dateCreated[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: type
          in: query
          required: false
          schema:
            type: string
        -
          name: 'type[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: sourceOrganization
          in: query
          required: false
          schema:
            type: string
        -
          name: 'sourceOrganization[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: limit
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
            default: 30
            minimum: 0
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - Organization
      operationId: postOrganizationCollection
      summary: 'Creates a Organization resource.'
      responses:
        201:
          description: 'Organization resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Organization:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Organization:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Organization-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Organization-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Organization-read'
          links:
            GetOrganizationItem:
              parameters:
                id: '$response.body#/id'
              operationId: getOrganizationItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /organizations/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Organization:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Organization:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Organization-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Organization-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Organization-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Organization-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Organization-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Organization-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Organization-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Organization-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Organization-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Organization-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Organization-write'
        description: 'The new Organization resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/organizations/{id}':
    get:
      tags:
        - Organization
      operationId: getOrganizationItem
      summary: 'Retrieves a Organization resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Organization resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Organization:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Organization:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Organization-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Organization-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Organization-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    put:
      tags:
        - Organization
      operationId: putOrganizationItem
      summary: 'Replaces the Organization resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Organization resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Organization:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Organization:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Organization-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Organization-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Organization-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Organization:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Organization:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Organization-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Organization-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Organization-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Organization-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Organization-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Organization-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Organization-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Organization-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Organization-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Organization-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Organization-write'
        description: 'The updated Organization resource'
    delete:
      tags:
        - Organization
      operationId: deleteOrganizationItem
      summary: 'Removes the Organization resource.'
      responses:
        204:
          description: 'Organization resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/organizations/{id}/audit_trail':
    get:
      tags:
        - Organization
      operationId: get_audit_trailOrganizationItem
      summary: 'Retrieves a Organization resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Organization resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Organization:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Organization:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Organization-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Organization-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Organization-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
  '/organizations/{id}/change_log':
    get:
      tags:
        - Organization
      operationId: get_change_logsOrganizationItem
      summary: 'Retrieves a Organization resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Organization resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Organization:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Organization:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Organization-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Organization-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Organization-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
  /people:
    get:
      tags:
        - Person
      operationId: getPersonCollection
      summary: 'Retrieves the collection of Person resources.'
      responses:
        200:
          description: 'Person collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Person:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Person:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Person-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Person-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Person-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Person-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Person-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Person-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Person-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Person-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Person-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Person-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Person-read'
      parameters:
        -
          name: 'order[id]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[resource]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[givenName]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[additionalName]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[familyName]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[birthday]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[taxID]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[aboutMe]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateCreated]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateModified]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[personalPhoto]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[sourceOrganization]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[gender]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[maritalStatus]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[primaryLanguage]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[speakingLanguages]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[contactPreference]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dependents]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'birthday[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'birthday[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'birthday[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'birthday[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: sourceOrganization
          in: query
          required: false
          schema:
            type: string
        -
          name: 'sourceOrganization[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: limit
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
            default: 30
            minimum: 0
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - Person
      operationId: postPersonCollection
      summary: 'Creates a Person resource.'
      responses:
        201:
          description: 'Person resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Person:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Person:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Person-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Person-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Person-read'
          links:
            GetPersonItem:
              parameters:
                id: '$response.body#/id'
              operationId: getPersonItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /people/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Person:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Person:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Person-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Person-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Person-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Person-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Person-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Person-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Person-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Person-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Person-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Person-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Person-write'
        description: 'The new Person resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/people/{id}':
    get:
      tags:
        - Person
      operationId: getPersonItem
      summary: 'Retrieves a Person resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Person resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Person:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Person:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Person-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Person-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Person-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    put:
      tags:
        - Person
      operationId: putPersonItem
      summary: 'Replaces the Person resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Person resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Person:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Person:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Person-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Person-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Person-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Person:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Person:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Person-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Person-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Person-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Person-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Person-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Person-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Person-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Person-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Person-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Person-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Person-write'
        description: 'The updated Person resource'
    delete:
      tags:
        - Person
      operationId: deletePersonItem
      summary: 'Removes the Person resource.'
      responses:
        204:
          description: 'Person resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/persons/{id}/audit_trail':
    get:
      tags:
        - Person
      operationId: get_audit_trailPersonItem
      summary: 'Retrieves a Person resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Person resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Person:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Person:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Person-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Person-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Person-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
  '/persons/{id}/change_log':
    get:
      tags:
        - Person
      operationId: get_change_logsPersonItem
      summary: 'Retrieves a Person resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Person resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Person:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Person:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Person-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Person-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Person-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
  /socials:
    get:
      tags:
        - Social
      operationId: getSocialCollection
      summary: 'Retrieves the collection of Social resources.'
      responses:
        200:
          description: 'Social collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Social:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Social:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Social-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Social-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Social-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Social-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Social-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Social-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Social-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Social-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Social-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Social-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Social-read'
      parameters:
        -
          name: 'order[id]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[name]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[description]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[type]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[url]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateCreated]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateModified]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'dateCreated[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: type
          in: query
          required: false
          schema:
            type: string
        -
          name: 'type[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: limit
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
            default: 30
            minimum: 0
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - Social
      operationId: postSocialCollection
      summary: 'Creates a Social resource.'
      responses:
        201:
          description: 'Social resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Social:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Social:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Social-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Social-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Social-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Social-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Social-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Social-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Social-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Social-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Social-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Social-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Social-read'
          links:
            GetSocialItem:
              parameters:
                id: '$response.body#/id'
              operationId: getSocialItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /socials/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Social:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Social:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Social-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Social-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Social-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Social-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Social-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Social-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Social-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Social-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Social-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Social-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Social-write'
        description: 'The new Social resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/socials/{id}':
    get:
      tags:
        - Social
      operationId: getSocialItem
      summary: 'Retrieves a Social resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Social resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Social:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Social:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Social-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Social-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Social-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Social-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Social-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Social-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Social-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Social-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Social-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Social-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Social-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    put:
      tags:
        - Social
      operationId: putSocialItem
      summary: 'Replaces the Social resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Social resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Social:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Social:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Social-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Social-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Social-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Social-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Social-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Social-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Social-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Social-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Social-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Social-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Social-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Social:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Social:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Social-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Social-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Social-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Social-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Social-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Social-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Social-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Social-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Social-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Social-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Social-write'
        description: 'The updated Social resource'
    delete:
      tags:
        - Social
      operationId: deleteSocialItem
      summary: 'Removes the Social resource.'
      responses:
        204:
          description: 'Social resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/socials/{id}/audit_trail':
    get:
      tags:
        - Social
      operationId: get_audit_trailSocialItem
      summary: 'Retrieves a Social resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Social resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Social:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Social:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Social-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Social-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Social-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Social-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Social-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Social-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Social-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Social-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Social-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Social-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Social-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
  '/socials/{id}/change_log':
    get:
      tags:
        - Social
      operationId: get_change_logsSocialItem
      summary: 'Retrieves a Social resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Social resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Social:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Social:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Social-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Social-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Social-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Social-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Social-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Social-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Social-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Social-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Social-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Social-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Social-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
  /telephones:
    get:
      tags:
        - Telephone
      operationId: getTelephoneCollection
      summary: 'Retrieves the collection of Telephone resources.'
      responses:
        200:
          description: 'Telephone collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Telephone:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Telephone:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Telephone-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Telephone-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Telephone-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Telephone-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Telephone-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Telephone-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Telephone-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Telephone-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Telephone-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Telephone-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Telephone-read'
      parameters:
        -
          name: 'order[id]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[name]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[telephone]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateCreated]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateModified]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'dateCreated[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: id
          in: query
          required: false
          schema:
            type: string
        -
          name: 'id[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: name
          in: query
          required: false
          schema:
            type: string
        -
          name: 'name[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: telephone
          in: query
          required: false
          schema:
            type: string
        -
          name: 'telephone[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: dateCreated
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[]'
          in: query
          required: false
          schema:
            type: string
        -
          name: dateModified
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[]'
          in: query
          required: false
          schema:
            type: string
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: limit
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
            default: 30
            minimum: 0
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - Telephone
      operationId: postTelephoneCollection
      summary: 'Creates a Telephone resource.'
      responses:
        201:
          description: 'Telephone resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Telephone:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Telephone:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Telephone-read'
          links:
            GetTelephoneItem:
              parameters:
                id: '$response.body#/id'
              operationId: getTelephoneItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /telephones/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Telephone:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Telephone:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Telephone-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Telephone-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Telephone-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Telephone-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Telephone-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Telephone-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Telephone-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Telephone-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Telephone-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Telephone-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Telephone-write'
        description: 'The new Telephone resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/telephones/{id}':
    get:
      tags:
        - Telephone
      operationId: getTelephoneItem
      summary: 'Retrieves a Telephone resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Telephone resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Telephone:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Telephone:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Telephone-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    put:
      tags:
        - Telephone
      operationId: putTelephoneItem
      summary: 'Replaces the Telephone resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Telephone resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Telephone:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Telephone:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Telephone-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Telephone:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Telephone:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Telephone-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Telephone-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Telephone-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Telephone-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Telephone-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Telephone-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Telephone-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Telephone-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Telephone-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Telephone-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Telephone-write'
        description: 'The updated Telephone resource'
    delete:
      tags:
        - Telephone
      operationId: deleteTelephoneItem
      summary: 'Removes the Telephone resource.'
      responses:
        204:
          description: 'Telephone resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/telephones/{id}/audit_trail':
    get:
      tags:
        - Telephone
      operationId: get_audit_trailTelephoneItem
      summary: 'Retrieves a Telephone resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Telephone resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Telephone:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Telephone:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Telephone-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
  '/telephones/{id}/change_log':
    get:
      tags:
        - Telephone
      operationId: get_change_logsTelephoneItem
      summary: 'Retrieves a Telephone resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Telephone resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Telephone:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Telephone:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Telephone-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
components:
  schemas:
    Address-read:
      type: object
      description: 'All properties that the entity Address holds.'
      properties:
        id:
          readOnly: true
          description: 'Uuid of this address'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        name:
          description: 'Name of this Address'
          type: string
          nullable: true
        bagnummeraanduiding:
          description: 'Bagnummeraanduiding of this Address'
          type: string
          nullable: true
        street:
          description: 'Street of this Address'
          type: string
          nullable: true
        houseNumber:
          description: 'House number of this Address'
          type: string
          nullable: true
        houseNumberSuffix:
          description: 'House number suffix of this Address'
          type: string
          nullable: true
        postalCode:
          description: 'Postalcode of a Address'
          type: string
          nullable: true
        region:
          description: 'region Region of a Address'
          type: string
          nullable: true
        locality:
          description: 'Locality of a Address'
          type: string
          nullable: true
        country:
          description: 'Country of a Address'
          type: string
          nullable: true
        postOfficeBoxNumber:
          description: 'Post office box number of a Address'
          type: string
          nullable: true
        dateCreated:
          description: 'The moment this resource was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this resource last Modified'
          type: string
          format: date-time
          nullable: true
    Address-write:
      type: object
      description: 'All properties that the entity Address holds.'
      properties:
        name:
          description: 'Name of this Address'
          type: string
          nullable: true
        bagnummeraanduiding:
          description: 'Bagnummeraanduiding of this Address'
          type: string
          nullable: true
        street:
          description: 'Street of this Address'
          type: string
          nullable: true
        houseNumber:
          description: 'House number of this Address'
          type: string
          nullable: true
        houseNumberSuffix:
          description: 'House number suffix of this Address'
          type: string
          nullable: true
        postalCode:
          description: 'Postalcode of a Address'
          type: string
          nullable: true
        region:
          description: 'region Region of a Address'
          type: string
          nullable: true
        locality:
          description: 'Locality of a Address'
          type: string
          nullable: true
        country:
          description: 'Country of a Address'
          type: string
          nullable: true
        postOfficeBoxNumber:
          description: 'Post office box number of a Address'
          type: string
          nullable: true
    'Address:jsonld-read':
      type: object
      description: 'All properties that the entity Address holds.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'Uuid of this address'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        name:
          description: 'Name of this Address'
          type: string
          nullable: true
        bagnummeraanduiding:
          description: 'Bagnummeraanduiding of this Address'
          type: string
          nullable: true
        street:
          description: 'Street of this Address'
          type: string
          nullable: true
        houseNumber:
          description: 'House number of this Address'
          type: string
          nullable: true
        houseNumberSuffix:
          description: 'House number suffix of this Address'
          type: string
          nullable: true
        postalCode:
          description: 'Postalcode of a Address'
          type: string
          nullable: true
        region:
          description: 'region Region of a Address'
          type: string
          nullable: true
        locality:
          description: 'Locality of a Address'
          type: string
          nullable: true
        country:
          description: 'Country of a Address'
          type: string
          nullable: true
        postOfficeBoxNumber:
          description: 'Post office box number of a Address'
          type: string
          nullable: true
        dateCreated:
          description: 'The moment this resource was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this resource last Modified'
          type: string
          format: date-time
          nullable: true
    'Address:jsonld-write':
      type: object
      description: 'All properties that the entity Address holds.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        name:
          description: 'Name of this Address'
          type: string
          nullable: true
        bagnummeraanduiding:
          description: 'Bagnummeraanduiding of this Address'
          type: string
          nullable: true
        street:
          description: 'Street of this Address'
          type: string
          nullable: true
        houseNumber:
          description: 'House number of this Address'
          type: string
          nullable: true
        houseNumberSuffix:
          description: 'House number suffix of this Address'
          type: string
          nullable: true
        postalCode:
          description: 'Postalcode of a Address'
          type: string
          nullable: true
        region:
          description: 'region Region of a Address'
          type: string
          nullable: true
        locality:
          description: 'Locality of a Address'
          type: string
          nullable: true
        country:
          description: 'Country of a Address'
          type: string
          nullable: true
        postOfficeBoxNumber:
          description: 'Post office box number of a Address'
          type: string
          nullable: true
    AuditTrail-read:
      type: object
      description: 'An resource representing a log line.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        application:
          writeOnly: true
          description: 'The application that made the request'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        request:
          description: 'The id of the request within that application'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        user:
          description: 'The user on behalf of wich the request was made'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        subject:
          description: '???'
          type: string
          nullable: true
        process:
          description: 'The procces on behalf of wich the request was made'
          type: string
          nullable: true
        dataElements:
          description: 'The moment this request was created'
          type: array
          items:
            type: string
          nullable: true
        dataSubjects:
          description: 'The moment this request was created'
          type: array
          items:
            type: string
          nullable: true
        resource:
          description: 'The resource that was requested'
          type: string
          nullable: true
        resourceType:
          description: 'The type of the resource that was requested'
          type: string
          nullable: true
        route:
          description: 'The moment this request was created'
          type: string
          nullable: true
        endpoint:
          description: 'The endpoint that the request was made to'
          type: string
          nullable: true
        method:
          description: 'The method that was used'
          type: string
          nullable: true
        accept:
          description: 'The contentType that was reqousted'
          type: string
          nullable: true
        contentType:
          description: 'The contentType that was suplieds'
          type: string
          nullable: true
        content:
          description: 'The moment this request was created'
          type: string
          nullable: true
        ip:
          description: 'The moment this request was created'
          type: string
          nullable: true
        session:
          description: 'The moment this request was created'
          type: string
        headers:
          description: 'The headers supplied by client'
          type: array
          items:
            type: string
        statusCode:
          description: 'The status code returned to client'
          type: integer
          nullable: true
        notFound:
          description: 'Whether or not the reqousted endpoint was found'
          type: boolean
          nullable: true
        forbidden:
          description: 'Whether or not the client was allowed to the reqousted endpoint'
          type: boolean
          nullable: true
        ok:
          description: 'Whether or not there where any problems'
          type: boolean
          nullable: true
        dateCreated:
          description: 'The moment this request was created'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request last Modified'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
    AuditTrail-write:
      type: object
      description: 'An resource representing a log line.'
    'AuditTrail:jsonld-read':
      type: object
      description: 'An resource representing a log line.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        application:
          writeOnly: true
          description: 'The application that made the request'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        request:
          description: 'The id of the request within that application'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        user:
          description: 'The user on behalf of wich the request was made'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        subject:
          description: '???'
          type: string
          nullable: true
        process:
          description: 'The procces on behalf of wich the request was made'
          type: string
          nullable: true
        dataElements:
          description: 'The moment this request was created'
          type: array
          items:
            type: string
          nullable: true
        dataSubjects:
          description: 'The moment this request was created'
          type: array
          items:
            type: string
          nullable: true
        resource:
          description: 'The resource that was requested'
          type: string
          nullable: true
        resourceType:
          description: 'The type of the resource that was requested'
          type: string
          nullable: true
        route:
          description: 'The moment this request was created'
          type: string
          nullable: true
        endpoint:
          description: 'The endpoint that the request was made to'
          type: string
          nullable: true
        method:
          description: 'The method that was used'
          type: string
          nullable: true
        accept:
          description: 'The contentType that was reqousted'
          type: string
          nullable: true
        contentType:
          description: 'The contentType that was suplieds'
          type: string
          nullable: true
        content:
          description: 'The moment this request was created'
          type: string
          nullable: true
        ip:
          description: 'The moment this request was created'
          type: string
          nullable: true
        session:
          description: 'The moment this request was created'
          type: string
        headers:
          description: 'The headers supplied by client'
          type: array
          items:
            type: string
        statusCode:
          description: 'The status code returned to client'
          type: integer
          nullable: true
        notFound:
          description: 'Whether or not the reqousted endpoint was found'
          type: boolean
          nullable: true
        forbidden:
          description: 'Whether or not the client was allowed to the reqousted endpoint'
          type: boolean
          nullable: true
        ok:
          description: 'Whether or not there where any problems'
          type: boolean
          nullable: true
        dateCreated:
          description: 'The moment this request was created'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request last Modified'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
    'AuditTrail:jsonld-write':
      type: object
      description: 'An resource representing a log line.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
    ChangeLog-read:
      type: object
      description: 'An resource representing a log line.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        action:
          type: string
        objectId:
          type: string
          nullable: true
        objectClass:
          type: string
        version:
          type: integer
        data:
          type: array
          items:
            type: string
          nullable: true
        username:
          type: string
          nullable: true
        session:
          description: 'The moment this request was created'
          type: string
          nullable: true
        dateCreated:
          description: 'The moment this request was created'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request last Modified'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
    ChangeLog-write:
      type: object
      description: 'An resource representing a log line.'
    'ChangeLog:jsonld-read':
      type: object
      description: 'An resource representing a log line.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        action:
          type: string
        objectId:
          type: string
          nullable: true
        objectClass:
          type: string
        version:
          type: integer
        data:
          type: array
          items:
            type: string
          nullable: true
        username:
          type: string
          nullable: true
        session:
          description: 'The moment this request was created'
          type: string
          nullable: true
        dateCreated:
          description: 'The moment this request was created'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request last Modified'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
    'ChangeLog:jsonld-write':
      type: object
      description: 'An resource representing a log line.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
    ContactList-read:
      type: object
      description: 'All properties that the entity ContactList holds.'
      properties:
        id:
          readOnly: true
          description: 'UUID of this contact list'
          type: string
          format: uuid
        name:
          description: 'Name of this contact list'
          type: string
        description:
          description: 'Description of this contact list'
          type: string
          nullable: true
        owner:
          description: 'The owner of this ContactList'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Person-read'
        persons:
          description: 'Persons this contact list has'
          type: array
          items:
            $ref: '#/components/schemas/Person-read'
        organizations:
          description: 'Organisations this contact list has'
          type: array
          items:
            $ref: '#/components/schemas/Organization-read'
        dateCreated:
          description: 'The moment this resource was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this resource last Modified'
          type: string
          format: date-time
          nullable: true
      required:
        - name
    ContactList-write:
      type: object
      description: 'All properties that the entity ContactList holds.'
      required:
        - name
      properties:
        name:
          description: 'Name of this contact list'
          type: string
        description:
          description: 'Description of this contact list'
          type: string
          nullable: true
        owner:
          description: 'The owner of this ContactList'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Person-write'
        persons:
          description: 'Persons this contact list has'
          type: array
          items:
            $ref: '#/components/schemas/Person-write'
        organizations:
          description: 'Organisations this contact list has'
          type: array
          items:
            $ref: '#/components/schemas/Organization-write'
    'ContactList:jsonld-read':
      type: object
      description: 'All properties that the entity ContactList holds.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'UUID of this contact list'
          type: string
          format: uuid
        name:
          description: 'Name of this contact list'
          type: string
        description:
          description: 'Description of this contact list'
          type: string
          nullable: true
        owner:
          description: 'The owner of this ContactList'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Person:jsonld-read'
        persons:
          description: 'Persons this contact list has'
          type: array
          items:
            $ref: '#/components/schemas/Person:jsonld-read'
        organizations:
          description: 'Organisations this contact list has'
          type: array
          items:
            $ref: '#/components/schemas/Organization:jsonld-read'
        dateCreated:
          description: 'The moment this resource was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this resource last Modified'
          type: string
          format: date-time
          nullable: true
      required:
        - name
    'ContactList:jsonld-write':
      type: object
      description: 'All properties that the entity ContactList holds.'
      required:
        - name
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        name:
          description: 'Name of this contact list'
          type: string
        description:
          description: 'Description of this contact list'
          type: string
          nullable: true
        owner:
          description: 'The owner of this ContactList'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Person:jsonld-write'
        persons:
          description: 'Persons this contact list has'
          type: array
          items:
            $ref: '#/components/schemas/Person:jsonld-write'
        organizations:
          description: 'Organisations this contact list has'
          type: array
          items:
            $ref: '#/components/schemas/Organization:jsonld-write'
    Email-read:
      type: object
      description: 'All properties that the entity Email holds.'
      properties:
        id:
          readOnly: true
          description: 'UUID of this email'
          type: string
          format: uuid
        name:
          description: 'Name of this email'
          type: string
          nullable: true
        email:
          description: 'Email of this email'
          type: string
        dateCreated:
          description: 'The moment this resource was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this resource last Modified'
          type: string
          format: date-time
          nullable: true
      required:
        - email
    Email-write:
      type: object
      description: 'All properties that the entity Email holds.'
      properties:
        name:
          description: 'Name of this email'
          type: string
          nullable: true
        email:
          description: 'Email of this email'
          type: string
      required:
        - email
    'Email:jsonld-read':
      type: object
      description: 'All properties that the entity Email holds.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'UUID of this email'
          type: string
          format: uuid
        name:
          description: 'Name of this email'
          type: string
          nullable: true
        email:
          description: 'Email of this email'
          type: string
        dateCreated:
          description: 'The moment this resource was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this resource last Modified'
          type: string
          format: date-time
          nullable: true
      required:
        - email
    'Email:jsonld-write':
      type: object
      description: 'All properties that the entity Email holds.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        name:
          description: 'Name of this email'
          type: string
          nullable: true
        email:
          description: 'Email of this email'
          type: string
      required:
        - email
    Organization-read:
      type: object
      description: 'All properties that the entity Organisation holds.'
      properties:
        id:
          readOnly: true
          description: 'UUID of this organisation'
          type: string
          format: uuid
        name:
          description: 'Name of this organisation'
          type: string
        description:
          description: 'Description of this organisation'
          type: string
          nullable: true
        type:
          description: 'Type of this organisation'
          type: string
          nullable: true
        coc:
          description: 'Chamber Of Comerce number of this organisation'
          type: string
          nullable: true
        vatID:
          description: 'Value added tax id of this organisation (btw)'
          type: string
          nullable: true
        parentOrganization:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Organization-read'
        subOrganizations:
          description: 'The sub-organizations of which this organization is the parent organization.'
          type: array
          items:
            $ref: '#/components/schemas/Organization-read'
        telephones:
          description: 'Telephone of this organisation'
          type: array
          items:
            $ref: '#/components/schemas/Telephone-read'
        addresses:
          description: 'Address of this organisation'
          type: array
          items:
            $ref: '#/components/schemas/Address-read'
        socials:
          description: 'Socials of this organisation'
          type: array
          items:
            $ref: '#/components/schemas/Social-read'
        emails:
          description: 'Email of this organisation'
          type: array
          items:
            $ref: '#/components/schemas/Email-read'
        persons:
          description: 'Person of this organisation'
          type: array
          items:
            $ref: '#/components/schemas/Person-read'
        sourceOrganization:
          description: 'The WRC url of the organization that owns this group'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
      required:
        - name
    Organization-write:
      type: object
      description: 'All properties that the entity Organisation holds.'
      required:
        - name
      properties:
        name:
          description: 'Name of this organisation'
          type: string
        description:
          description: 'Description of this organisation'
          type: string
          nullable: true
        type:
          description: 'Type of this organisation'
          type: string
          nullable: true
        coc:
          description: 'Chamber Of Comerce number of this organisation'
          type: string
          nullable: true
        vatID:
          description: 'Value added tax id of this organisation (btw)'
          type: string
          nullable: true
        parentOrganization:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Organization-write'
        subOrganizations:
          description: 'The sub-organizations of which this organization is the parent organization.'
          type: array
          items:
            $ref: '#/components/schemas/Organization-write'
        telephones:
          description: 'Telephone of this organisation'
          type: array
          items:
            $ref: '#/components/schemas/Telephone-write'
        addresses:
          description: 'Address of this organisation'
          type: array
          items:
            $ref: '#/components/schemas/Address-write'
        socials:
          description: 'Socials of this organisation'
          type: array
          items:
            $ref: '#/components/schemas/Social-write'
        emails:
          description: 'Email of this organisation'
          type: array
          items:
            $ref: '#/components/schemas/Email-write'
        persons:
          description: 'Person of this organisation'
          type: array
          items:
            $ref: '#/components/schemas/Person-write'
        sourceOrganization:
          description: 'The WRC url of the organization that owns this group'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
    'Organization:jsonld-read':
      type: object
      description: 'All properties that the entity Organisation holds.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'UUID of this organisation'
          type: string
          format: uuid
        name:
          description: 'Name of this organisation'
          type: string
        description:
          description: 'Description of this organisation'
          type: string
          nullable: true
        type:
          description: 'Type of this organisation'
          type: string
          nullable: true
        coc:
          description: 'Chamber Of Comerce number of this organisation'
          type: string
          nullable: true
        vatID:
          description: 'Value added tax id of this organisation (btw)'
          type: string
          nullable: true
        parentOrganization:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Organization:jsonld-read'
        subOrganizations:
          description: 'The sub-organizations of which this organization is the parent organization.'
          type: array
          items:
            $ref: '#/components/schemas/Organization:jsonld-read'
        telephones:
          description: 'Telephone of this organisation'
          type: array
          items:
            $ref: '#/components/schemas/Telephone:jsonld-read'
        addresses:
          description: 'Address of this organisation'
          type: array
          items:
            $ref: '#/components/schemas/Address:jsonld-read'
        socials:
          description: 'Socials of this organisation'
          type: array
          items:
            $ref: '#/components/schemas/Social:jsonld-read'
        emails:
          description: 'Email of this organisation'
          type: array
          items:
            $ref: '#/components/schemas/Email:jsonld-read'
        persons:
          description: 'Person of this organisation'
          type: array
          items:
            $ref: '#/components/schemas/Person:jsonld-read'
        sourceOrganization:
          description: 'The WRC url of the organization that owns this group'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
      required:
        - name
    'Organization:jsonld-write':
      type: object
      description: 'All properties that the entity Organisation holds.'
      required:
        - name
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        name:
          description: 'Name of this organisation'
          type: string
        description:
          description: 'Description of this organisation'
          type: string
          nullable: true
        type:
          description: 'Type of this organisation'
          type: string
          nullable: true
        coc:
          description: 'Chamber Of Comerce number of this organisation'
          type: string
          nullable: true
        vatID:
          description: 'Value added tax id of this organisation (btw)'
          type: string
          nullable: true
        parentOrganization:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Organization:jsonld-write'
        subOrganizations:
          description: 'The sub-organizations of which this organization is the parent organization.'
          type: array
          items:
            $ref: '#/components/schemas/Organization:jsonld-write'
        telephones:
          description: 'Telephone of this organisation'
          type: array
          items:
            $ref: '#/components/schemas/Telephone:jsonld-write'
        addresses:
          description: 'Address of this organisation'
          type: array
          items:
            $ref: '#/components/schemas/Address:jsonld-write'
        socials:
          description: 'Socials of this organisation'
          type: array
          items:
            $ref: '#/components/schemas/Social:jsonld-write'
        emails:
          description: 'Email of this organisation'
          type: array
          items:
            $ref: '#/components/schemas/Email:jsonld-write'
        persons:
          description: 'Person of this organisation'
          type: array
          items:
            $ref: '#/components/schemas/Person:jsonld-write'
        sourceOrganization:
          description: 'The WRC url of the organization that owns this group'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
    Person-read:
      type: object
      description: 'All properties that the entity Person holds.'
      properties:
        id:
          readOnly: true
          description: 'UUID of this person'
          type: string
          format: uuid
        resource:
          description: 'A specific commonground resource'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        name:
          readOnly: true
          description: 'The full name of a person consisting of given and fammily name'
          type: string
        formalName:
          readOnly: true
          description: 'The full name of a person consisting of fammily and given name'
          type: string
        givenName:
          description: 'Given name of this person'
          type: string
        additionalName:
          description: 'Additional name of this person'
          type: string
          nullable: true
        familyName:
          description: 'Family name of this person'
          type: string
          nullable: true
        birthday:
          description: 'Date of birth of this person'
          type: string
          format: date-time
          nullable: true
        taxID:
          description: 'TIN, CIF, NIF or BSN'
          type: string
          nullable: true
        aboutMe:
          description: 'Information about this person'
          type: string
          nullable: true
        telephones:
          description: 'Telephone of this person'
          type: array
          items:
            $ref: '#/components/schemas/Telephone-read'
        addresses:
          description: 'Addresses of this person'
          type: array
          items:
            $ref: '#/components/schemas/Address-read'
        socials:
          description: 'Socials of this person'
          type: array
          items:
            $ref: '#/components/schemas/Social-read'
        emails:
          description: 'Emails of this person'
          type: array
          items:
            $ref: '#/components/schemas/Email-read'
        ownedContactLists:
          description: 'Contact lists this person owns'
          type: array
          items:
            $ref: '#/components/schemas/ContactList-read'
        contactLists:
          description: 'Contact lists this person is on'
          type: array
          items:
            $ref: '#/components/schemas/ContactList-read'
        dateCreated:
          description: 'The moment this resource was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this resource last Modified'
          type: string
          format: date-time
          nullable: true
        personalPhoto:
          description: 'Base64 of the image'
          type: string
          nullable: true
        sourceOrganization:
          description: 'The WRC url of the organization that owns this group'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        gender:
          description: 'The gender of the person. **Male**, **Female**'
          type: string
          nullable: true
        birthplace:
          description: 'Birthplace of this person'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Address-read'
        maritalStatus:
          description: 'The marital status of the person. **MARRIED_PARTNER**, **SINGLE**, **DIVORCED**, **WIDOW**'
          type: string
          nullable: true
        primaryLanguage:
          description: 'The primary language of the person.'
          type: string
          nullable: true
        speakingLanguages:
          description: 'The speaking languages of the person.'
          type: array
          items:
            type: string
          nullable: true
        contactPreference:
          description: 'The contact preference of the person.'
          type: string
          nullable: true
        dependents:
          description: 'The dependents of this person'
          type: array
          items:
            type: string
      required:
        - givenName
    Person-write:
      type: object
      description: 'All properties that the entity Person holds.'
      properties:
        resource:
          description: 'A specific commonground resource'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        givenName:
          description: 'Given name of this person'
          type: string
        additionalName:
          description: 'Additional name of this person'
          type: string
          nullable: true
        familyName:
          description: 'Family name of this person'
          type: string
          nullable: true
        birthday:
          description: 'Date of birth of this person'
          type: string
          format: date-time
          nullable: true
        taxID:
          description: 'TIN, CIF, NIF or BSN'
          type: string
          nullable: true
        aboutMe:
          description: 'Information about this person'
          type: string
          nullable: true
        telephones:
          description: 'Telephone of this person'
          type: array
          items:
            $ref: '#/components/schemas/Telephone-write'
        addresses:
          description: 'Addresses of this person'
          type: array
          items:
            $ref: '#/components/schemas/Address-write'
        socials:
          description: 'Socials of this person'
          type: array
          items:
            $ref: '#/components/schemas/Social-write'
        emails:
          description: 'Emails of this person'
          type: array
          items:
            $ref: '#/components/schemas/Email-write'
        ownedContactLists:
          description: 'Contact lists this person owns'
          type: array
          items:
            $ref: '#/components/schemas/ContactList-write'
        contactLists:
          description: 'Contact lists this person is on'
          type: array
          items:
            $ref: '#/components/schemas/ContactList-write'
        personalPhoto:
          description: 'Base64 of the image'
          type: string
          nullable: true
        sourceOrganization:
          description: 'The WRC url of the organization that owns this group'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        gender:
          description: 'The gender of the person. **Male**, **Female**'
          type: string
          nullable: true
        birthplace:
          description: 'Birthplace of this person'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Address-write'
        maritalStatus:
          description: 'The marital status of the person. **MARRIED_PARTNER**, **SINGLE**, **DIVORCED**, **WIDOW**'
          type: string
          nullable: true
        primaryLanguage:
          description: 'The primary language of the person.'
          type: string
          nullable: true
        speakingLanguages:
          description: 'The speaking languages of the person.'
          type: array
          items:
            type: string
          nullable: true
        contactPreference:
          description: 'The contact preference of the person.'
          type: string
          nullable: true
        dependents:
          description: 'The dependents of this person'
          type: array
          items:
            type: string
      required:
        - givenName
    'Person:jsonld-read':
      type: object
      description: 'All properties that the entity Person holds.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'UUID of this person'
          type: string
          format: uuid
        resource:
          description: 'A specific commonground resource'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        name:
          readOnly: true
          description: 'The full name of a person consisting of given and fammily name'
          type: string
        formalName:
          readOnly: true
          description: 'The full name of a person consisting of fammily and given name'
          type: string
        givenName:
          description: 'Given name of this person'
          type: string
        additionalName:
          description: 'Additional name of this person'
          type: string
          nullable: true
        familyName:
          description: 'Family name of this person'
          type: string
          nullable: true
        birthday:
          description: 'Date of birth of this person'
          type: string
          format: date-time
          nullable: true
        taxID:
          description: 'TIN, CIF, NIF or BSN'
          type: string
          nullable: true
        aboutMe:
          description: 'Information about this person'
          type: string
          nullable: true
        telephones:
          description: 'Telephone of this person'
          type: array
          items:
            $ref: '#/components/schemas/Telephone:jsonld-read'
        addresses:
          description: 'Addresses of this person'
          type: array
          items:
            $ref: '#/components/schemas/Address:jsonld-read'
        socials:
          description: 'Socials of this person'
          type: array
          items:
            $ref: '#/components/schemas/Social:jsonld-read'
        emails:
          description: 'Emails of this person'
          type: array
          items:
            $ref: '#/components/schemas/Email:jsonld-read'
        ownedContactLists:
          description: 'Contact lists this person owns'
          type: array
          items:
            $ref: '#/components/schemas/ContactList:jsonld-read'
        contactLists:
          description: 'Contact lists this person is on'
          type: array
          items:
            $ref: '#/components/schemas/ContactList:jsonld-read'
        dateCreated:
          description: 'The moment this resource was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this resource last Modified'
          type: string
          format: date-time
          nullable: true
        personalPhoto:
          description: 'Base64 of the image'
          type: string
          nullable: true
        sourceOrganization:
          description: 'The WRC url of the organization that owns this group'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        gender:
          description: 'The gender of the person. **Male**, **Female**'
          type: string
          nullable: true
        birthplace:
          description: 'Birthplace of this person'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Address:jsonld-read'
        maritalStatus:
          description: 'The marital status of the person. **MARRIED_PARTNER**, **SINGLE**, **DIVORCED**, **WIDOW**'
          type: string
          nullable: true
        primaryLanguage:
          description: 'The primary language of the person.'
          type: string
          nullable: true
        speakingLanguages:
          description: 'The speaking languages of the person.'
          type: array
          items:
            type: string
          nullable: true
        contactPreference:
          description: 'The contact preference of the person.'
          type: string
          nullable: true
        dependents:
          description: 'The dependents of this person'
          type: array
          items:
            type: string
      required:
        - givenName
    'Person:jsonld-write':
      type: object
      description: 'All properties that the entity Person holds.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        resource:
          description: 'A specific commonground resource'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        givenName:
          description: 'Given name of this person'
          type: string
        additionalName:
          description: 'Additional name of this person'
          type: string
          nullable: true
        familyName:
          description: 'Family name of this person'
          type: string
          nullable: true
        birthday:
          description: 'Date of birth of this person'
          type: string
          format: date-time
          nullable: true
        taxID:
          description: 'TIN, CIF, NIF or BSN'
          type: string
          nullable: true
        aboutMe:
          description: 'Information about this person'
          type: string
          nullable: true
        telephones:
          description: 'Telephone of this person'
          type: array
          items:
            $ref: '#/components/schemas/Telephone:jsonld-write'
        addresses:
          description: 'Addresses of this person'
          type: array
          items:
            $ref: '#/components/schemas/Address:jsonld-write'
        socials:
          description: 'Socials of this person'
          type: array
          items:
            $ref: '#/components/schemas/Social:jsonld-write'
        emails:
          description: 'Emails of this person'
          type: array
          items:
            $ref: '#/components/schemas/Email:jsonld-write'
        ownedContactLists:
          description: 'Contact lists this person owns'
          type: array
          items:
            $ref: '#/components/schemas/ContactList:jsonld-write'
        contactLists:
          description: 'Contact lists this person is on'
          type: array
          items:
            $ref: '#/components/schemas/ContactList:jsonld-write'
        personalPhoto:
          description: 'Base64 of the image'
          type: string
          nullable: true
        sourceOrganization:
          description: 'The WRC url of the organization that owns this group'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        gender:
          description: 'The gender of the person. **Male**, **Female**'
          type: string
          nullable: true
        birthplace:
          description: 'Birthplace of this person'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Address:jsonld-write'
        maritalStatus:
          description: 'The marital status of the person. **MARRIED_PARTNER**, **SINGLE**, **DIVORCED**, **WIDOW**'
          type: string
          nullable: true
        primaryLanguage:
          description: 'The primary language of the person.'
          type: string
          nullable: true
        speakingLanguages:
          description: 'The speaking languages of the person.'
          type: array
          items:
            type: string
          nullable: true
        contactPreference:
          description: 'The contact preference of the person.'
          type: string
          nullable: true
        dependents:
          description: 'The dependents of this person'
          type: array
          items:
            type: string
      required:
        - givenName
    Social-read:
      type: object
      description: 'All properties that the entity Social holds.'
      properties:
        id:
          readOnly: true
          description: 'UUID of this telephone'
          type: string
          format: uuid
        name:
          description: 'Name of this social'
          type: string
        description:
          description: 'Description of this social'
          type: string
          nullable: true
        type:
          description: 'The type of this social. Options: (website, twitter, facebook, linkedin, instagram, github, other)'
          type: string
        url:
          description: 'Url of this social'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        dateCreated:
          description: 'The moment this resource was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this resource last Modified'
          type: string
          format: date-time
          nullable: true
      required:
        - name
        - url
    Social-write:
      type: object
      description: 'All properties that the entity Social holds.'
      required:
        - name
        - url
      properties:
        name:
          description: 'Name of this social'
          type: string
        description:
          description: 'Description of this social'
          type: string
          nullable: true
        type:
          description: 'The type of this social. Options: (website, twitter, facebook, linkedin, instagram, github, other)'
          type: string
        url:
          description: 'Url of this social'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
    'Social:jsonld-read':
      type: object
      description: 'All properties that the entity Social holds.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'UUID of this telephone'
          type: string
          format: uuid
        name:
          description: 'Name of this social'
          type: string
        description:
          description: 'Description of this social'
          type: string
          nullable: true
        type:
          description: 'The type of this social. Options: (website, twitter, facebook, linkedin, instagram, github, other)'
          type: string
        url:
          description: 'Url of this social'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        dateCreated:
          description: 'The moment this resource was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this resource last Modified'
          type: string
          format: date-time
          nullable: true
      required:
        - name
        - url
    'Social:jsonld-write':
      type: object
      description: 'All properties that the entity Social holds.'
      required:
        - name
        - url
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        name:
          description: 'Name of this social'
          type: string
        description:
          description: 'Description of this social'
          type: string
          nullable: true
        type:
          description: 'The type of this social. Options: (website, twitter, facebook, linkedin, instagram, github, other)'
          type: string
        url:
          description: 'Url of this social'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
    Telephone-read:
      type: object
      description: 'All properties that the entity Telephone holds.'
      properties:
        id:
          readOnly: true
          description: 'UUID of this telephone'
          type: string
          format: uuid
        name:
          description: 'Name of this telephone'
          type: string
          nullable: true
        telephone:
          description: 'The actual phone number including any international prefixes'
          type: string
        dateCreated:
          description: 'The moment this resource was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this resource last Modified'
          type: string
          format: date-time
          nullable: true
      required:
        - telephone
    Telephone-write:
      type: object
      description: 'All properties that the entity Telephone holds.'
      properties:
        name:
          description: 'Name of this telephone'
          type: string
          nullable: true
        telephone:
          description: 'The actual phone number including any international prefixes'
          type: string
      required:
        - telephone
    'Telephone:jsonld-read':
      type: object
      description: 'All properties that the entity Telephone holds.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'UUID of this telephone'
          type: string
          format: uuid
        name:
          description: 'Name of this telephone'
          type: string
          nullable: true
        telephone:
          description: 'The actual phone number including any international prefixes'
          type: string
        dateCreated:
          description: 'The moment this resource was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this resource last Modified'
          type: string
          format: date-time
          nullable: true
      required:
        - telephone
    'Telephone:jsonld-write':
      type: object
      description: 'All properties that the entity Telephone holds.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        name:
          description: 'Name of this telephone'
          type: string
          nullable: true
        telephone:
          description: 'The actual phone number including any international prefixes'
          type: string
      required:
        - telephone
definitions:
  Address-read:
    properties:
      id:
        description: 'Uuid of this address'
        type: string
        format: uuid
      name:
        description: 'Name of this Address'
        type: string
        example: 'Amsterdam Office'
        maxLength: 255
      bagnummeraanduiding:
        description: 'Bagnummeraanduiding of this Address'
        type: string
        example: '0363200000218908'
        maxLength: 16
      street:
        description: 'Street of this Address'
        type: string
        example: appelstreet
        maxLength: 255
      houseNumber:
        description: 'House number of this Address'
        type: string
        example: '8'
        maxLength: 255
      houseNumberSuffix:
        description: 'House number suffix of this Address'
        type: string
        example: b
        maxLength: 255
      postalCode:
        description: 'Postalcode of a Address'
        type: string
        example: 1234AB
      region:
        description: 'region Region of a Address'
        type: string
        example: Noord-Holland
        maxLength: 255
      locality:
        description: 'Locality of a Address'
        type: string
        example: Oud-Zuid
        maxLength: 255
      country:
        description: 'Country of a Address'
        type: string
        example: 'The Netherlands'
        maxLength: 255
      postOfficeBoxNumber:
        description: 'Post office box number of a Address'
        type: string
        example: 'PO Box 1234'
        maxLength: 255
      dateCreated:
        description: 'The moment this resource was created'
        type: \Datetime
      dateModified:
        description: 'The moment this resource last Modified'
        type: \Datetime
    required: []
  Address-write:
    properties:
      name:
        description: 'Name of this Address'
        type: string
        example: 'Amsterdam Office'
        maxLength: 255
      bagnummeraanduiding:
        description: 'Bagnummeraanduiding of this Address'
        type: string
        example: '0363200000218908'
        maxLength: 16
      street:
        description: 'Street of this Address'
        type: string
        example: appelstreet
        maxLength: 255
      houseNumber:
        description: 'House number of this Address'
        type: string
        example: '8'
        maxLength: 255
      houseNumberSuffix:
        description: 'House number suffix of this Address'
        type: string
        example: b
        maxLength: 255
      postalCode:
        description: 'Postalcode of a Address'
        type: string
        example: 1234AB
      region:
        description: 'region Region of a Address'
        type: string
        example: Noord-Holland
        maxLength: 255
      locality:
        description: 'Locality of a Address'
        type: string
        example: Oud-Zuid
        maxLength: 255
      country:
        description: 'Country of a Address'
        type: string
        example: 'The Netherlands'
        maxLength: 255
      postOfficeBoxNumber:
        description: 'Post office box number of a Address'
        type: string
        example: 'PO Box 1234'
        maxLength: 255
    required: []
  ContactList-read:
    properties:
      id:
        description: 'UUID of this contact list'
        type: \UuidInterface
      name:
        description: 'Name of this contact list'
        type: string
        example: 'All users'
        maxLength: 255
      description:
        description: 'Description of this contact list'
        type: string
        example: 'This contact list holds all users.'
      dateCreated:
        description: 'The moment this resource was created'
        type: \Datetime
      dateModified:
        description: 'The moment this resource last Modified'
        type: \Datetime
      owner:
        description: 'The owner of this ContactList'
        type: \Person
      persons:
        description: 'Persons this contact list has'
        type: \Person
        example: Hans
      organizations:
        description: 'Organisations this contact list has'
        type: \Organization
        example: Ajax
    required: []
  ContactList-write:
    properties:
      name:
        description: 'Name of this contact list'
        type: string
        example: 'All users'
        maxLength: 255
      description:
        description: 'Description of this contact list'
        type: string
        example: 'This contact list holds all users.'
      owner:
        description: 'The owner of this ContactList'
        type: \Person
      persons:
        description: 'Persons this contact list has'
        type: \Person
        example: Hans
      organizations:
        description: 'Organisations this contact list has'
        type: \Organization
        example: Ajax
    required: []
  Email-read:
    properties:
      id:
        description: 'UUID of this email'
        type: \UuidInterface
      name:
        description: 'Name of this email'
        type: string
        example: Private
        maxLength: 255
      email:
        description: 'Email of this email'
        type: string
        maxLength: 255
      dateCreated:
        description: 'The moment this resource was created'
        type: \Datetime
      dateModified:
        description: 'The moment this resource last Modified'
        type: \Datetime
    required: []
  Email-write:
    properties:
      name:
        description: 'Name of this email'
        type: string
        example: Private
        maxLength: 255
      email:
        description: 'Email of this email'
        type: string
        maxLength: 255
    required: []
  Organization-read:
    properties:
      id:
        description: 'UUID of this organisation'
        type: \UuidInterface
      name:
        description: 'Name of this organisation'
        type: string
        example: Ajax
        maxLength: 255
      description:
        description: 'Description of this organisation'
        type: string
        example: 'Ajax is a dutch soccer club'
      type:
        description: 'Type of this organisation'
        type: string
        example: Township
        maxLength: 255
      coc:
        description: 'Chamber Of Comerce number of this organisation'
        type: string
        example: '123456'
        maxLength: 15
      vatID:
        description: 'Value added tax id of this organisation (btw)'
        type: string
        example: '123456'
        maxLength: 15
      dateCreated:
        description: 'The moment this resource was created'
        type: \Datetime
      dateModified:
        description: 'The moment this resource last Modified'
        type: \Datetime
      sourceOrganization:
        description: 'The WRC url of the organization that owns this group'
        type: string
        example: '002851234'
        format: url
      parentOrganization: []
      subOrganizations:
        description: 'The sub-organizations of which this organization is the parent organization.'
        type: '\ArrayCollection|\Organization[]'
      telephones:
        description: 'Telephone of this organisation'
        type: \Telephone
      addresses:
        description: 'Address of this organisation'
        type: \Address
      socials:
        description: 'Socials of this organisation'
        type: \Social
      emails:
        description: 'Email of this organisation'
        type: \Email
      persons:
        description: 'Person of this organisation'
        type: \Person
    required: []
  Organization-write:
    properties:
      name:
        description: 'Name of this organisation'
        type: string
        example: Ajax
        maxLength: 255
      description:
        description: 'Description of this organisation'
        type: string
        example: 'Ajax is a dutch soccer club'
      type:
        description: 'Type of this organisation'
        type: string
        example: Township
        maxLength: 255
      coc:
        description: 'Chamber Of Comerce number of this organisation'
        type: string
        example: '123456'
        maxLength: 15
      vatID:
        description: 'Value added tax id of this organisation (btw)'
        type: string
        example: '123456'
        maxLength: 15
      sourceOrganization:
        description: 'The WRC url of the organization that owns this group'
        type: string
        example: '002851234'
        format: url
      parentOrganization: []
      subOrganizations:
        description: 'The sub-organizations of which this organization is the parent organization.'
        type: '\ArrayCollection|\Organization[]'
      telephones:
        description: 'Telephone of this organisation'
        type: \Telephone
      addresses:
        description: 'Address of this organisation'
        type: \Address
      socials:
        description: 'Socials of this organisation'
        type: \Social
      emails:
        description: 'Email of this organisation'
        type: \Email
      persons:
        description: 'Person of this organisation'
        type: \Person
    required: []
  Person-read:
    properties:
      id:
        description: 'UUID of this person'
        type: \UuidInterface
      resource:
        description: 'A specific commonground resource'
        type: string
        example: 'https://wrc.zaakonline.nl/organisations/16353702-4614-42ff-92af-7dd11c8eef9f'
        format: url
      givenName:
        description: 'Given name of this person'
        type: string
        example: John
        maxLength: 255
      additionalName:
        description: 'Additional name of this person'
        type: string
        example: von
        maxLength: 255
      familyName:
        description: 'Family name of this person'
        type: string
        example: Do
        maxLength: 255
      birthday:
        description: 'Date of birth of this person'
        type: string
        example: 15-03-2000
      taxID:
        description: 'TIN, CIF, NIF or BSN'
        type: string
        example: '999994670'
        maxLength: 255
      aboutMe:
        description: 'Information about this person'
        type: string
        example: 'I like to dance !'
        maxLength: 255
      dateCreated:
        description: 'The moment this resource was created'
        type: \Datetime
      dateModified:
        description: 'The moment this resource last Modified'
        type: \Datetime
      personalPhoto:
        description: 'Base64 of the image'
        type: string
      sourceOrganization:
        description: 'The WRC url of the organization that owns this group'
        type: string
        example: '002851234'
        format: url
      gender:
        description: 'The gender of the person. **Male**, **Female**'
        type: string
        example: Male
      maritalStatus:
        description: 'The marital status of the person. **MARRIED_PARTNER**, **SINGLE**, **DIVORCED**, **WIDOW**'
        type: string
        example: Married
      primaryLanguage:
        description: 'The primary language of the person.'
        type: string
        example: Dutch
      speakingLanguages:
        description: 'The speaking languages of the person.'
        type: array
        example: '"English", "NLD"'
      contactPreference:
        description: 'The contact preference of the person.'
        type: string
        example: Whatsapp
      dependents:
        description: 'The dependents of this person'
        type: array
        example: 'array(0 => "dateOfBirth" => "2000-05-15")'
      telephones:
        description: 'Telephone of this person'
        type: \Telephone
      addresses:
        description: 'Addresses of this person'
        type: \Address
      socials:
        description: 'Socials of this person'
        type: \Social
      emails:
        description: 'Emails of this person'
        type: \Email
      ownedContactLists:
        description: 'Contact lists this person owns'
        type: \ContactList
      contactLists:
        description: 'Contact lists this person is on'
        type: \ContactList
      birthplace:
        description: 'Birthplace of this person'
        type: \Address
    required: []
  Person-write:
    properties:
      resource:
        description: 'A specific commonground resource'
        type: string
        example: 'https://wrc.zaakonline.nl/organisations/16353702-4614-42ff-92af-7dd11c8eef9f'
        format: url
      givenName:
        description: 'Given name of this person'
        type: string
        example: John
        maxLength: 255
      additionalName:
        description: 'Additional name of this person'
        type: string
        example: von
        maxLength: 255
      familyName:
        description: 'Family name of this person'
        type: string
        example: Do
        maxLength: 255
      birthday:
        description: 'Date of birth of this person'
        type: string
        example: 15-03-2000
      taxID:
        description: 'TIN, CIF, NIF or BSN'
        type: string
        example: '999994670'
        maxLength: 255
      aboutMe:
        description: 'Information about this person'
        type: string
        example: 'I like to dance !'
        maxLength: 255
      personalPhoto:
        description: 'Base64 of the image'
        type: string
      sourceOrganization:
        description: 'The WRC url of the organization that owns this group'
        type: string
        example: '002851234'
        format: url
      gender:
        description: 'The gender of the person. **Male**, **Female**'
        type: string
        example: Male
      maritalStatus:
        description: 'The marital status of the person. **MARRIED_PARTNER**, **SINGLE**, **DIVORCED**, **WIDOW**'
        type: string
        example: Married
      primaryLanguage:
        description: 'The primary language of the person.'
        type: string
        example: Dutch
      speakingLanguages:
        description: 'The speaking languages of the person.'
        type: array
        example: '"English", "NLD"'
      contactPreference:
        description: 'The contact preference of the person.'
        type: string
        example: Whatsapp
      dependents:
        description: 'The dependents of this person'
        type: array
        example: 'array(0 => "dateOfBirth" => "2000-05-15")'
      telephones:
        description: 'Telephone of this person'
        type: \Telephone
      addresses:
        description: 'Addresses of this person'
        type: \Address
      socials:
        description: 'Socials of this person'
        type: \Social
      emails:
        description: 'Emails of this person'
        type: \Email
      ownedContactLists:
        description: 'Contact lists this person owns'
        type: \ContactList
      contactLists:
        description: 'Contact lists this person is on'
        type: \ContactList
      birthplace:
        description: 'Birthplace of this person'
        type: \Address
    required: []
  Social-read:
    properties:
      id:
        description: 'UUID of this telephone'
        type: \UuidInterface
      name:
        description: 'Name of this social'
        type: string
        example: 'Twitter of an organization/person'
        maxLength: 255
      description:
        description: 'Description of this social'
        type: string
        example: 'This is the twitter of an organization or person'
      type:
        description: 'The type of this social. Options: (website, twitter, facebook, linkedin, instagram, github, other)'
        type: string
        example: twitter
      url:
        description: 'Url of this social'
        type: string
        example: 'https://www.twitter.com'
        format: url
        maxLength: 255
      dateCreated:
        description: 'The moment this resource was created'
        type: \Datetime
      dateModified:
        description: 'The moment this resource last Modified'
        type: \Datetime
    required:
      - name
      - url
  Social-write:
    properties:
      name:
        description: 'Name of this social'
        type: string
        example: 'Twitter of an organization/person'
        maxLength: 255
      description:
        description: 'Description of this social'
        type: string
        example: 'This is the twitter of an organization or person'
      type:
        description: 'The type of this social. Options: (website, twitter, facebook, linkedin, instagram, github, other)'
        type: string
        example: twitter
      url:
        description: 'Url of this social'
        type: string
        example: 'https://www.twitter.com'
        format: url
        maxLength: 255
    required:
      - name
      - url
  Telephone-read:
    properties:
      id:
        description: 'UUID of this telephone'
        type: \UuidInterface
      name:
        description: 'Name of this telephone'
        type: string
        example: Mobile
        maxLength: 255
      telephone:
        description: 'The actual phone number including any international prefixes'
        type: string
        example: '+31 (0)10-1234567'
        maxLength: 255
      dateCreated:
        description: 'The moment this resource was created'
        type: \Datetime
      dateModified:
        description: 'The moment this resource last Modified'
        type: \Datetime
    required: []
  Telephone-write:
    properties:
      name:
        description: 'Name of this telephone'
        type: string
        example: Mobile
        maxLength: 255
      telephone:
        description: 'The actual phone number including any international prefixes'
        type: string
        example: '+31 (0)10-1234567'
        maxLength: 255
    required: []
  AuditTrail-read:
    properties:
      id:
        description: 'The UUID identifier of this object'
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
      note:
        description: 'A note conserning this log lin'
        type: string
        example: 'This log line looks suspicius'
        maxLength: 2555
      application:
        description: 'The application that made the request'
        type: string
        format: url
        maxLength: 255
      request:
        description: 'The id of the request within that application'
        type: string
        format: url
        maxLength: 255
      user:
        description: 'The user on behalf of wich the request was made'
        type: string
        format: url
        maxLength: 255
      subject:
        description: '???'
        type: string
        maxLength: 255
      process:
        description: 'The procces on behalf of wich the request was made'
        type: string
        maxLength: 255
      dataElements:
        description: 'The moment this request was created'
        type: array
      dataSubjects:
        description: 'The moment this request was created'
        type: array
      resource:
        description: 'The resource that was requested'
        type: string
        maxLength: 255
      resourceType:
        description: 'The type of the resource that was requested'
        type: string
        maxLength: 255
      route:
        description: 'The moment this request was created'
        type: string
        maxLength: 255
      endpoint:
        description: 'The endpoint that the request was made to'
        type: string
        maxLength: 255
      method:
        description: 'The method that was used'
        type: string
        maxLength: 255
      accept:
        description: 'The contentType that was reqousted'
        type: string
        maxLength: 255
      contentType:
        description: 'The contentType that was suplieds'
        type: string
        maxLength: 255
      content:
        description: 'The moment this request was created'
        type: string
        maxLength: 2555
      ip:
        description: 'The moment this request was created'
        type: string
        maxLength: 255
      session:
        description: 'The moment this request was created'
        type: string
        maxLength: 255
      headers:
        description: 'The headers supplied by client'
        type: array
      statusCode:
        description: 'The status code returned to client'
        type: int
        example: '200'
      notFound:
        description: 'Whether or not the reqousted endpoint was found'
        type: bool
        example: 'false'
      forbidden:
        description: 'Whether or not the client was allowed to the reqousted endpoint'
        type: bool
        example: 'false'
      ok:
        description: 'Whether or not there where any problems'
        type: bool
        example: 'true'
      dateCreated:
        description: 'The moment this request was created'
        type: string
        format: date-time
        example: '2021-04-29 12:09:45'
      dateModified:
        description: 'The moment this request last Modified'
        type: string
        format: date-time
        example: '2021-04-29 12:09:45'
    required: []
  AuditTrail-write:
    properties:
      note:
        description: 'A note conserning this log lin'
        type: string
        example: 'This log line looks suspicius'
        maxLength: 2555
    required: []
  ChangeLog-read:
    properties:
      id:
        description: 'The UUID identifier of this object'
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
      note:
        description: 'A note conserning this log lin'
        type: string
        example: 'This log line is suspicius'
        maxLength: 2555
      action:
        description: ''
        type: string
      objectId:
        description: ''
        type: string
      objectClass:
        description: ''
        type: string
      version:
        description: ''
        type: int
      data:
        description: ''
        type: array
      username:
        description: ''
        type: string
      session:
        description: 'The moment this request was created'
        type: string
        maxLength: 255
      dateCreated:
        description: 'The moment this request was created'
        type: string
        format: date-time
        example: '2021-04-29 12:09:45'
      dateModified:
        description: 'The moment this request last Modified'
        type: string
        format: date-time
        example: '2021-04-29 12:09:45'
    required: []
  ChangeLog-write:
    properties:
      note:
        description: 'A note conserning this log lin'
        type: string
        example: 'This log line is suspicius'
        maxLength: 2555
    required: []
tags:
  -
    name: Address
    description: |
      All properties that the entity Address holds.
      
      Entity Address exists of an id, a name, a bagnummeraanduiding, a street, a houseNumber, a houseNumberSufix, a postalCode, a region, a locality and country.
  -
    name: ContactList
    description: |
      All properties that the entity ContactList holds.
      
      Entity ContactList is a link object between one person contact and one or more persons and/or one or more organisations. It also has a name, and description to describe the relation between the objects.
  -
    name: Email
    description: |
      All properties that the entity Email holds.
      
      Entity Email exists of an id, a name, a email, one or more people and one or more organisations.
  -
    name: Organization
    description: |
      All properties that the entity Organisation holds.
      
      Entity Organisation exists of an id, a name, a description, a kvk number, one or more telephones, one or more addresses, one or more emails, one or more persons and one or more contactLists.
  -
    name: Person
    description: |
      All properties that the entity Person holds.
      
      Entity Person exists of an id, a givenName, a additionalName, a familyName, one or more telephones, one or more addresses, one or more emails, one or more organisations and one or more contactLists.
  -
    name: Social
    description: |
      All properties that the entity Social holds.
      
      Entity Organisation exists of an id, a name, a description, a person, a organization, a url to a website, a url to a twitter page, a url to a facebook page, a url to a linkedin page.
  -
    name: Telephone
    description: |
      All properties that the entity Telephone holds.
      
      Entity Telephone exists of an id, a name and a telephone.
  -
    name: AuditTrail
    description: |
      An resource representing a log line.
      
      This entity represents a product that can be ordered via the OrderRegistratieComponent.
  -
    name: ChangeLog
    description: |
      An resource representing a log line.
      
      This entity represents a product that can be ordered via the OrderRegistratieComponent.
securityDefinitions:
  JWT-Oauth:
    type: oauth2
    authorizationUrl: 'http://petstore.swagger.io/api/oauth/dialog'
    flow: implicit
    scopes:
      read: 'read right to the ChangeLog resource'
      write: 'write right to the ChangeLog resource'
  JWT-Token:
    type: apiKey
    in: header
    name: Authorization
    scopes:
      read: 'read right to the ChangeLog resource'
      write: 'write right to the ChangeLog resource'
host: irc.zaakonline.nl
servers:
  -
    name: zuid-drecht.nl
    url: contactcatalogus.dev.zuid-drecht.nl
externalDocs:
  -
    description: 'OAS Documentatie'
    url: 'http://proto.demo.common-ground.dev'
x-commonground:
  type: service
  developers:
    -
      name: Conduction
      url: 'https://github.com/ConductionNL'
      email: info@conduction.nl
    -
      name: 'Gemeente "s-Hertogenbosch'
      url: 'https://github.com/gemeenteshertogenbosch'
      email: info@s-hertogenbosch.nl/
    -
      name: 'Gemeente Utrecht'
      url: 'https://github.com/GemeenteUtrecht'
      email: info@utrecht.nl
  builds:
    -
      name: travis
      logo: 'https://travis-ci.org/api-platform/core.svg?branch=master'
      url: 'https://travis-ci.org/api-platform/core'
    -
      name: appveyor
      logo: 'https://ci.appveyor.com/api/projects/status/grwuyprts3wdqx5l?svg=true'
      url: 'https://ci.appveyor.com/project/dunglas/dunglasapibundle'
    -
      name: codecov
      logo: 'https://codecov.io/gh/api-platform/core/branch/master/graph/badge.svg'
      url: 'https://codecov.io/gh/api-platform/core'
    -
      name: SensioLabsInsight
      logo: 'https://insight.sensiolabs.com/projects/92d78899-946c-4282-89a3-ac92344f9a93/mini.png'
      url: 'https://insight.sensiolabs.com/projects/92d78899-946c-4282-89a3-ac92344f9a93'
    -
      name: 'Scrutinizer Code Quality'
      logo: 'https://scrutinizer-ci.com/g/api-platform/core/badges/quality-score.png?b=master'
      url: 'https://scrutinizer-ci.com/g/api-platform/core/?branch=master'
