name: Artifact Register

on:
    pull_request:
        branches:
            - master
    push:
        branches:
            - master


jobs:
    register:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v1
            - name: Check if we need to take action
              id: process
              run: |
                  export ARTIFACTHUB_ID=$(grep ARTIFACTHUB_ID= .env | cut -d '=' -f2)
                  if [ "${{ secrets.ARTIFACT_KEY }}" != "" ] && [ "$ARTIFACTHUB_ID" != "false" ] || [ "ARTIFACTHUB_ID" == "" ]; then
                    echo "##[set-output name=success;]true"
                  else
                    echo "##[set-output name=success;]false"
                  fi
            - name: defining variables
              id: request
              if: steps.process.outputs.success == 'true'
              run: |
                  export HEADER='{"X-API-KEY": "'${{secrets.ARTIFACT_KEY}}'"}'
                  echo "HEADER=$HEADER" >> $GITHUB_ENV
                  echo "##[set-output name=header]$HEADER"
                  export USER=$(grep ARTIFACTHUB_USER= .env | cut -d '=' -f2)
                  export URL='https://artifacthub.io/api/v1/repositories/user'
                  echo "URL=$URL" >> $GITHUB_ENV
                  echo "##[set-output name=url]$URL"
                  echo $URL
                  export HELM=$(grep HELM_REPOSITORY= .env | cut -d '=' -f2)
                  export NAME=$(grep APP_NAME_TECHNICAL= .env | cut -d '=' -f2)
                  export DATA='{"url": "'$HELM'", "name": "'$NAME'"}'
                  echo "DATA=$DATA" >> $GITHUB_ENV
                  echo "##[set-output name=data]$DATA"
            - name: test
              run: echo ${{ steps.request.url }}
            - name: Register To Artifact Hub
              id: myRequest
              if: steps.process.outputs.success == 'true'
              uses: fjogeleit/http-request-action@master
              with:
                url: ${{ steps.request.url }}
                customHeaders: ${{ steps.request.url }}
                method: 'POST'
                data: ${{ steps.request.data }}
            - name: Show Response
              run: echo ${{ steps.myRequest.outputs.response }}

